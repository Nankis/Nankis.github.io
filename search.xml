<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title><![CDATA[关于科学上网及自主搭建梯子(二)]]></title>
      <url>/2017/10/15/%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91%E6%90%AD%E6%A2%AF%E5%AD%90(%E4%BA%8C)/</url>
      <content type="html"><![CDATA[<h3 id="宝塔-魔改版V3"><a href="#宝塔-魔改版V3" class="headerlink" title="宝塔+魔改版V3"></a>宝塔+魔改版V3</h3><p>在搭建这个之前,如果你需要用来商用,则需要自己去购买一个域名,</p>
<p>当然也有免费域名,关于免费域名获取自行解决.  不过我自己用的</p>
<p>是godday的域名貌似40RMB一年…</p>
<h5 id="安装宝塔"><a href="#安装宝塔" class="headerlink" title="安装宝塔"></a>安装宝塔</h5><p>关于宝塔面板: 宝塔面板是Linux可直接操作面板,有些操作可以省去再用命令行操作.对新手十分友好.详情百度</p>
<ul>
<li>安装过程大概需要5分钟左右</li>
</ul>
<p><code>yum install -y wget &amp;&amp; wget -O install.sh http://download.bt.cn/install/install.sh &amp;&amp; sh install.sh</code></p>
<blockquote>
<p>这里有点需要提下:SSR的python需要需要2.7的而CentoS6自带的是2.6的所以需要升级,而安装宝塔自带将python升级到2.7.所以免去了手动升级python的步骤</p>
</blockquote>
<h5 id="宝塔安装LMNP"><a href="#宝塔安装LMNP" class="headerlink" title="宝塔安装LMNP"></a>宝塔安装LMNP</h5><p>宝塔安装完毕后会显示出登录的信息</p>
<p>默认应该是   VPS的IP地址:8888<br>假设我的IP地址为115.159.56.153 那么登录端口为</p>
<p><strong>115.159.56.153:8888</strong>  这种信息会在安装完毕后提示</p>
<p>根据安装完毕后得出的信息,复制到地址栏,打开后会有如下窗口:<br><img src="http://ossdpnhoy.bkt.clouddn.com/V1.png" alt="V1"></p>
<p>这里是我自己已经改过的信息.</p>
<p>登录成功后,请按如图所示安装需要的软件:</p>
<p><img src="http://ossdpnhoy.bkt.clouddn.com/V2.png" alt="V2"></p>
<p>除上图外,还需要再多安装一个 PHP7.0</p>
<p>安装完以上软件大概需要20分钟左右..</p>
<h5 id="配置及搭建站点"><a href="#配置及搭建站点" class="headerlink" title="配置及搭建站点"></a>配置及搭建站点</h5><p>现在开始需要刚才提到的域名了.如果你购买了域名后还需要进行DNS解析,大概需要20分钟左右.具体方法自行搜索.</p>
<ul>
<li>添加站点<br><img src="http://ossdpnhoy.bkt.clouddn.com/VPSTV3.png" alt="V3"></li>
</ul>
<p>这里你在解析的时候如果需要一个前端页面,那么需要去开一个二级页面.</p>
<ul>
<li>添加伪静态</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">location / &#123;</div><div class="line">           try_files $uri $uri/ /index.php$is_args$args;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p><img src="http://ossdpnhoy.bkt.clouddn.com/VPSTV4.png" alt="V4"></p>
<h4 id="搭建魔改V3站点"><a href="#搭建魔改V3站点" class="headerlink" title="搭建魔改V3站点"></a>搭建魔改V3站点</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">cd /www/wwwroot/www.nanki.vip</div><div class="line">git clone https://git.coding.net/mmmwhy/mod.git tmp &amp;&amp; mv tmp/.git . &amp;&amp; rm -rf tmp &amp;&amp; git reset --hard</div><div class="line">chown -R root:root *</div><div class="line">chmod -R 755 *</div><div class="line">chown -R www:www storage</div><div class="line">php composer.phar install         #必须安装，重要</div><div class="line">chattr -i .user.ini</div><div class="line">mv .user.ini ./public</div><div class="line">cd ./public</div><div class="line">chattr +i .user.ini</div></pre></td></tr></table></figure>
<p><strong>注意:</strong> 记得将第一行换成自己的域名.</p>
<ul>
<li>完成后直接在宝塔控制面板中重启页面服务器nginx</li>
</ul>
<h4 id="下载modV3"><a href="#下载modV3" class="headerlink" title="下载modV3"></a>下载modV3</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git clone https://git.coding.net/mmmwhy/mod.git tmp &amp;&amp; mv tmp/.git . &amp;&amp; rm -rf tmp &amp;&amp; git reset --hard</div></pre></td></tr></table></figure>
<h4 id="解压安装设置定时任务"><a href="#解压安装设置定时任务" class="headerlink" title="解压安装设置定时任务"></a>解压安装设置定时任务</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">yum -y install vixie-cron crontabs</div><div class="line">rm -rf /var/spool/cron/root</div><div class="line">echo &apos;SHELL=/bin/bash&apos; &gt;&gt; /var/spool/cron/root</div><div class="line">echo &apos;PATH=/sbin:/bin:/usr/sbin:/usr/bin&apos; &gt;&gt; /var/spool/cron/root</div><div class="line">echo &apos;*/20 * * * * /usr/sbin/ntpdate pool.ntp.org &gt; /dev/null 2&gt;&amp;1&apos; &gt;&gt; /var/spool/cron/root</div><div class="line">echo &apos;30 22 * * * php /www/wwwroot/www.nanki.vip/xcat sendDiaryMail&apos; &gt;&gt; /var/spool/cron/root</div><div class="line">echo &apos;0 0 * * * php /www/wwwroot/www.nanki.vip/xcat dailyjob&apos; &gt;&gt; /var/spool/cron/root</div><div class="line">echo &apos;*/1 * * * * php /www/wwwroot/www.nanki.vip/xcat checkjob&apos; &gt;&gt; /var/spool/cron/root</div><div class="line">/sbin/service crond restart</div></pre></td></tr></table></figure>
<p><strong>再次提醒:</strong>  记得将www.nanki.vip 换成自己的域名</p>
<h5 id="导入SSPanel文件入数据库"><a href="#导入SSPanel文件入数据库" class="headerlink" title="导入SSPanel文件入数据库"></a>导入SSPanel文件入数据库</h5><p>下载<a href="http://pan.baidu.com/s/1jI69GgA" target="_blank" rel="external"> <font color="red">sspanel文件</font></a><br>暂时存好,马上要用到</p>
<blockquote>
<p>密码:163e<br>原谅我只有网盘….</p>
</blockquote>
<ul>
<li>下载完后导入数据库里<br><img src="http://ossdpnhoy.bkt.clouddn.com/V8.png" alt="V8"></li>
</ul>
<p>之后,进入上边的那个phpmyadmin,新建sspanel数据库</p>
<p><img src="http://ossdpnhoy.bkt.clouddn.com/V6.png" alt="V6"></p>
<h5 id="配置config"><a href="#配置config" class="headerlink" title="配置config"></a>配置config</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">vi/wwwroot/www.nanki.vip/confing/.config.php</div></pre></td></tr></table></figure>
<p><img src="http://ossdpnhoy.bkt.clouddn.com/vv1.png" alt="vv1"></p>
<blockquote>
<p>这时候页面搭好了默认的帐号是:ss@91vps.club 默认密码:91vps</p>
</blockquote>
<h5 id="修改管理员"><a href="#修改管理员" class="headerlink" title="修改管理员"></a>修改管理员</h5><p>在<br><code>cd  /www/wwwroot/www.nanki.vip/</code><br> 配置</p>
<p>添加管理员<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">php xcat createAdmin</div></pre></td></tr></table></figure></p>
<p>同时,还可以通过数据库后台修改默认管理员帐号</p>
<p>下载客户端<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">php -n xat initdowonload</div></pre></td></tr></table></figure></p>
<p>到此,如果前面没错魔改站点已经搭建完毕,接下来就只要安装SSR即可</p>
<h3 id="SSR安装配置"><a href="#SSR安装配置" class="headerlink" title="SSR安装配置"></a>SSR安装配置</h3><h4 id="基本库安装"><a href="#基本库安装" class="headerlink" title="基本库安装"></a>基本库安装</h4><p>centos安装这个:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">yum update</div><div class="line">yum install git -y</div></pre></td></tr></table></figure></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git clone  https://github.com/Nankis/shadowsocksr-1.git</div></pre></td></tr></table></figure>
<p>执行完毕后此目录会新建一个shadowsocksr目录</p>
<h4 id="安装依赖（cymysql）"><a href="#安装依赖（cymysql）" class="headerlink" title="安装依赖（cymysql）"></a>安装依赖（cymysql）</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">cd shadowsocksr</div><div class="line"># 进入ShadowsocksR根目录</div><div class="line">bash setup_cymysql.sh</div><div class="line"># 安装Cymysql 依赖</div><div class="line">bash initcfg.sh</div><div class="line"># 初始化ShadowsocksR服务端</div></pre></td></tr></table></figure>
<h4 id="服务端配置"><a href="#服务端配置" class="headerlink" title="服务端配置"></a>服务端配置</h4><p>shadowsocksr 根目录内，打开文件vi usermysql.json：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">&quot;host&quot;: &quot;127.0.0.1&quot;, //前端mysql域名/IP</div><div class="line">&quot;port&quot;: 3306, //mysql端口</div><div class="line">&quot;user&quot;: &quot;ss&quot;, //mysql用户名</div><div class="line">&quot;password&quot;: &quot;pass&quot;, //mysql密码</div><div class="line">&quot;db&quot;: &quot;shadowsocks&quot;, //数据库名</div></pre></td></tr></table></figure>
<h4 id="配置config-json文件"><a href="#配置config-json文件" class="headerlink" title="配置config.json文件"></a>配置config.json文件</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">vi userapiconfig.py</div></pre></td></tr></table></figure>
<p>找到这么一行:<br><strong>API_INTERFACE = ‘’sspanelv2’’</strong></p>
<p>把 <strong>sspanelv2</strong> 修改成 <strong>sspanelv3</strong></p>
<h4 id="修改数据库配置"><a href="#修改数据库配置" class="headerlink" title="修改数据库配置"></a>修改数据库配置</h4><p><strong>注意:</strong> 到此步骤后为了防止奇怪的错误,需要先去增加一个节点<br>登录你的域名网站,用管理员方式登录,进入最左下角的管理员面板<br>在节点列表的右下角有个加号,那里添加一个节点<br>如图所示:</p>
<p><img src="http://ossdpnhoy.bkt.clouddn.com/VV3.png" alt="VV3"></p>
<p>记住日本节点的ID: 3</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">vi usermysql.json</div></pre></td></tr></table></figure>
<p><img src="http://ossdpnhoy.bkt.clouddn.com/VV2.png" alt="VV2"></p>
<p>将图中的 <strong>‘’node_id’’:1,</strong>  的1 改成3;(和上图日本ID相同)</p>
<h4 id="调试"><a href="#调试" class="headerlink" title="调试"></a>调试</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">python server.py</div></pre></td></tr></table></figure>
<blockquote>
<p>这句运行代码主要用于调试，关闭ssh后ss后端自动关闭，所以正式使用请使用下面的脚本运行！如果需要停止请按Ctrl+C键终止程序。</p>
<p>这时可查看有运行情况，检查有没有错误。如果服务端没有错误，而连接不上，需要检查iptables或firewall(centos7)的防火墙配置</p>
</blockquote>
<h5 id="关于iptables的配置"><a href="#关于iptables的配置" class="headerlink" title="关于iptables的配置"></a>关于iptables的配置</h5><p>在配置iptables之前,先试着把iptables暂时关闭后试试看是否没问题了..如果运行没问题了.那就开始配置.配置方式参考  <a href="https://nankis.github.io/2017/07/08/CentOS67iptables%E9%85%8D%E7%BD%AE/" target="_blank" rel="external"><font color="red">我是传送门</font></a></p>
<h4 id="通过脚本运行"><a href="#通过脚本运行" class="headerlink" title="通过脚本运行"></a>通过脚本运行</h4><p>脚本位于 shadowsocksr 根目录，如果你没有在这个目录，请先进入根目录cd shadowsocksr</p>
<p>请分清楚，根目录 shadowsocksr 和子目录 shadowsocksr/shadowsocks ！<br>赋予脚本执行权限（执行一次就好）<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">chmod +x *.sh</div></pre></td></tr></table></figure></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">./run.sh</div></pre></td></tr></table></figure>
<blockquote>
<p>后台运行 但不记录日志（ssh窗口关闭后也继续运行）</p>
</blockquote>
<h4 id="开机启动"><a href="#开机启动" class="headerlink" title="开机启动"></a>开机启动</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">chmod +x /etc/rc.d/rc.local</div><div class="line">vi /etc/rc.d/rc.local</div></pre></td></tr></table></figure>
<h4 id="加速优化"><a href="#加速优化" class="headerlink" title="加速优化"></a>加速优化</h4><p>CentOS6和CentOS7 一键更换内核，一键安装锐速[lotServer][serverSpeeder ]</p>
<p>支持KVM、VMWARE、Hyper-v、XEN 虚拟化技术的VPS</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">wget --no-check-certificate https://blog.asuhu.com/sh/ruisu.sh</div><div class="line">bash ruisu.sh</div></pre></td></tr></table></figure>
<blockquote>
<p>CentOS6和CentOS7 一键更换内核，完成后会重启</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">wget --no-check-certificate -O appex.sh</div><div class="line"> https://raw.githubusercontent.com/0oVicero0/serverSpeeder_Install/master/appex.sh &amp;&amp; chmod +x appex.sh &amp;&amp; bash appex.sh install</div></pre></td></tr></table></figure>
<blockquote>
<p>CentOS6和7 更换内核完成一键安装锐速[lotServer]</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">lsmod |grep appex</div></pre></td></tr></table></figure>
<blockquote>
<p>安装完成后检测是否启用</p>
</blockquote>
<p>到此为止,完整的安装宝塔面板+魔改MODV3+SSR就已完成.  中途有些简单步骤已省略.</p>
<h4 id="测速"><a href="#测速" class="headerlink" title="测速"></a>测速</h4><p>关于测速,可以去找谷歌网盘测试,一些人测速喜欢用YouTube的统计，而实际上是仅供装逼….<br>其实那个不是很准…</p>
<h4 id="参考来源"><a href="#参考来源" class="headerlink" title="参考来源:"></a><strong>参考来源:</strong></h4><ul>
<li><p><a href="https://doub.io/" target="_blank" rel="external"><font color="red"> 逗逼根据地</font></a></p>
</li>
<li><p><a href="https://91vps.club" target="_blank" rel="external"><font color="red"> 91VPS</font></a></p>
</li>
</ul>
<blockquote>
<p>第一个需要梯子才能看, 第二个可能是大佬自己关了..</p>
<p>由于字数限制所以教程分开</p>
</blockquote>
<p>[<font color="red">科学上网及自主搭梯子(三)</font></p>
]]></content>
      
        <categories>
            
            <category> 技术流 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[关于科学上网及自主搭建梯子(一)]]></title>
      <url>/2017/10/15/%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91%E6%90%AD%E6%A2%AF%E5%AD%90(%E4%B8%80)/</url>
      <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言:"></a>前言:</h3><p>  假期花了点时间折腾了下,成功用VPS搭建了SSR(<a href="http://www.nanki.vip/" target="_blank" rel="external"><font color="gren">成功实例</font></a>).一开始没有找到很好的教</p>
<p>  程,自己来来回来折腾,</p>
<p>  重装了很多次服务器.后来找到了一键脚本之类的.还有魔改版等…此教程(其实没啥技术含量,</p>
<p>  或者都不算教程,其中大多都是搬照别人的)仅提供参考.</p>
<p>这个教程直接利用了别人写好的脚本和网站,所以只要安装正确,</p>
<p>配置正确的话就没问题的,这样会为第一次动手做这个的人少走很多弯路.</p>
<h3 id="为什么需要科学上网"><a href="#为什么需要科学上网" class="headerlink" title="为什么需要科学上网?"></a>为什么需要科学上网?</h3><ul>
<li>great firewall, 中国特有的。就是国家对网络的封锁。想要看看外面的世界，就得翻墙。既然想学点东西，就不能被网络束缚住。国内的网络环境，并不利于我们成长。..作为一个程序员,翻墙是必修课之一.</li>
<li><p>这里有个人写的一篇 <a href="http://stormzhang.com/2016/08/12/you-must-use-google/" target="_blank" rel="external"><font color="red">百度黑</font></a>参考….</p>
<h3 id="VPS"><a href="#VPS" class="headerlink" title="VPS"></a>VPS</h3><h4 id="VPS地点"><a href="#VPS地点" class="headerlink" title="VPS地点"></a>VPS地点</h4></li>
<li>美国的VPS联通/电信访问延迟基本相当。<br> 一般选择靠近美国西海岸节点旧金山、洛杉矶、纽约等地点。<br>电信限速很厉害，所以一般电信网需要开混淆配合FinaSppeed等加速。<br>新加坡节点，在靠近南方地区，可以ping在100以内稳定！youtube 4k不卡 但在偏北一些地区ping不稳定。</li>
</ul>
<ul>
<li>香港VPS，这个比较特殊，香港的VPS ping值可以低到20几，但是香港本身的国际出口就小，VPS价格也偏高，另外香港毕竟也在政府的直接管辖内，隐私方面风险比其他地区节点要大一些。建议土豪级别的游戏玩家使用。</li>
</ul>
<h4 id="VPS提供商"><a href="#VPS提供商" class="headerlink" title="VPS提供商"></a>VPS提供商</h4><p>目前市面上各种VPS供应商很多..在这里我不说太多..可自行查询,这里我选择的是Vultr的VPS.因为vultr免费快照很方便.,5$/月的费用也不高.</p>
<p><a href="https://www.vultr.com/?ref=7189114" target="_blank" rel="external">Vultr注册链接</a></p>
<blockquote>
<p>(题外话)通过这个推荐链接注册可以免费获得10美元,同时我也能获得一些奖励</p>
</blockquote>
<p>注意,购买</p>
<h4 id="服务器选择"><a href="#服务器选择" class="headerlink" title="服务器选择"></a>服务器选择</h4><ul>
<li><p>选择东京或者美国西海岸的服务器,速度相对比较快.<br><img src="http://ossdpnhoy.bkt.clouddn.com/VPSTVPS%E9%80%89%E6%8B%A91.png" alt="vps1"></p>
<h4 id="操作系统选择"><a href="#操作系统选择" class="headerlink" title="操作系统选择"></a>操作系统选择</h4><p><img src="http://ossdpnhoy.bkt.clouddn.com/VPSTVPS%E9%80%89%E6%8B%A92.png" alt="VPS2"></p>
<ul>
<li>注意,这里我选择CentOS6, 因为CentOS7去掉了iptables,而加了防火墙.处理起来会相对麻烦些.详情后面会讲到</li>
</ul>
</li>
</ul>
<h4 id="硬件选择"><a href="#硬件选择" class="headerlink" title="硬件选择"></a>硬件选择</h4><p><img src="http://ossdpnhoy.bkt.clouddn.com/VPSTVPS%E9%80%89%E6%8B%A93.png" alt="VPS3"></p>
<ul>
<li>此处打上勾,教育网用户/能分到IPV6地址的用户比较好用</li>
</ul>
<h4 id="关于购买"><a href="#关于购买" class="headerlink" title="关于购买"></a>关于购买</h4><ul>
<li>Vultr购买方式有<ul>
<li>paypal</li>
<li>visa信用卡<blockquote>
<p>这是我知道的方式…可能还有其他方式没试过</p>
</blockquote>
</li>
</ul>
</li>
</ul>
<p>这里我推荐使用paypal支付,先去paypal注册一个帐号,然后绑定一张银行卡即可.</p>
<p> <a href="https://www.paypal.com/c2/home" target="_blank" rel="external"><font color="red">Paypal注册地址</font></a></p>
<p><strong>注意:</strong> <font color="red">购买Vultr的VPS时,请别挂代理,否则可能会因为疑是欺诈而不能成功支付</font></p>
<h3 id="开始部署"><a href="#开始部署" class="headerlink" title="开始部署"></a>开始部署</h3><ul>
<li><p>现在你已经成功购买了一个5$/月的CentoS6 VPS.<br>  <img src="http://ossdpnhoy.bkt.clouddn.com/VPSTVPS4.png" alt="VPS4"></p>
</li>
<li><p>点击图标或服务器名字进入详情</p>
</li>
</ul>
<p><img src="http://ossdpnhoy.bkt.clouddn.com/VPSTvps5.png" alt="VPS5"></p>
<p>以上是VPS的信息<br>待会儿需要填写.地址和密码都可以直接复制</p>
<h4 id="下载SSH工具"><a href="#下载SSH工具" class="headerlink" title="下载SSH工具"></a>下载SSH工具</h4><p>这里我推荐用 <strong>Xshell</strong> ,下载方式:百度第一个</p>
<ul>
<li>安装完毕后打开应该是这样子的.<br>*<br><img src="http://ossdpnhoy.bkt.clouddn.com/VPSTVPS6.jpg" alt="VPS6"></li>
</ul>
<p>按照图示新建,会出现如图对话框,把刚才的ip地址复制到主机处.<br>可以在名称那里备注下:Vultr</p>
<ul>
<li><img src="http://ossdpnhoy.bkt.clouddn.com/VPSTVPS7.png" alt="VPS7"></li>
</ul>
<p>填写完毕后点击确定,会弹出一个对话框,只要点连接即,接着,会提示保存密</p>
<p>码之类的.选择接受并保存(貌似是中间的选项)</p>
<p>这时候只要出现左上角的有个绿点即表示连接服务器成功.</p>
<h4 id="关于安装"><a href="#关于安装" class="headerlink" title="关于安装"></a>关于安装</h4><ul>
<li><p>目前有几种安装方式,这里我写两种,第一种是最简单的一键安装脚本,安装脚本是来源于 <strong>“逗逼根据地”</strong>(末尾会附上链接)  这是单用户版,非商用</p>
</li>
<li><p>第二种是  宝塔版+前端魔改版V3的   可商用</p>
</li>
</ul>
<h4 id="一键安装脚本教程"><a href="#一键安装脚本教程" class="headerlink" title="一键安装脚本教程"></a>一键安装脚本教程</h4><p><strong>脚本特点:</strong></p>
<p> 支持 显示 SS/SSR连接+二维码</p>
<p>支持 一键安装 BBR</p>
<p> 支持 一键安装 锐速<br>…..</p>
<p>简单的来说，如果你什么都不懂，那么你直接一路回车就可以了！</p>
<p>本脚本需要Linux root账户权限才能正常安装运行，所以如果不是 root账</p>
<p>号，请先切换为root，如果是 root账号，那么请跳过！</p>
<h5 id="安装步骤"><a href="#安装步骤" class="headerlink" title="安装步骤"></a>安装步骤</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo su</div></pre></td></tr></table></figure>
<p>输入上面代码回车后会提示你输入当前用户的密码，输入并回车后，没有报错就继续下面的步骤安装ShadowsocksR。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">wget -N --no-check-certificate https://raw.githubusercontent.com/ToyoDAdoubi/doubi/master/ssrmu.sh &amp;&amp; chmod +x ssrmu.sh &amp;&amp; bash ssrmu.sh</div></pre></td></tr></table></figure>
<p>下载运行后会提示你输入数字来选择要做什么。</p>
<p>输入 1 ，就会开始安装ShadowsocksR服务端，并且会提示你输入Shadowsocks的 端口/密码/加密方式/ 协议/混淆（混淆和协议是通过输入数字选择的） 等参数来添加第一个用户。</p>
<blockquote>
<p>注意:用户名不支持中文,如果输入中文会一直保存下去!</p>
</blockquote>
<p>因为该脚本是纯小白式的安装方法,所以也没啥可说的.最后安装成功后会显示如图效果:</p>
<p><img src="http://ossdpnhoy.bkt.clouddn.com/VPSTVPS8.png" alt="VPS8"></p>
<p>如图成功后,可下载小飞机测试了…若是还有问题则看最后附上的原教程.</p>
<blockquote>
<p>由于字数限制所以教程分开请自己查看下一篇</p>
</blockquote>
<font color="red">科学上网及自主搭梯子(二)</font>
]]></content>
      
        <categories>
            
            <category> 技术流 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[关于科学上网及自主搭建梯子(三)]]></title>
      <url>/2017/10/15/%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91%E6%90%AD%E6%A2%AF%E5%AD%90(%E4%B8%89)/</url>
      <content type="html"><![CDATA[<h3 id="关于SSR及其他补充了解"><a href="#关于SSR及其他补充了解" class="headerlink" title="关于SSR及其他补充了解"></a>关于SSR及其他补充了解</h3><h4 id="Shadowsocks作者是谁？是否还在更新？"><a href="#Shadowsocks作者是谁？是否还在更新？" class="headerlink" title="Shadowsocks作者是谁？是否还在更新？"></a>Shadowsocks作者是谁？是否还在更新？</h4><p>Shadowsocks是由若干人因为兴趣而制作的一个项目，主要开发者和领导者是 @clowwindy ，</p>
<p>但是在2015年下半年 被“相关部门”约谈喝茶，于是被迫删除Github的源码及相关文档。</p>
<p><img src="http://ossdpnhoy.bkt.clouddn.com/vvv1.png" alt="VVV3"></p>
<p>但Shadowsocks属于开源项目，所以删除前已经有人备份，同时由另一个志愿者跟进维护原版 Shadowsocks</p>
<p> 客户端，而其他基于Shadowsocks项目的第三方项目有：</p>
<p>ShadowsocksR、Shadowsocks-qt5、ShadowsocksCap等来维护更新Window/Linux客户端（其他系统的不一一举例了）。</p>
<p>还有ShadowsocksR是breakwa11发起的shadowsocks分支，在shadowsocks的基础上增加了一些数据混淆方式</p>
<p>称修复了部分安全问题并可以提高QoS优先级。后来贡献者Librehat也为shadowsocks补上了一些此类特性</p>
<p>甚至增加了类似Tor的可插拔传输层功能。</p>
<p>而在两个月前破娃似乎是遭到了威胁..在8000+人的TG群上宣布了解散群,以及放手SSR更新.</p>
<p><img src="http://ossdpnhoy.bkt.clouddn.com/powa.png" alt="pw"></p>
<h4 id="SSR的PAC是什么意思"><a href="#SSR的PAC是什么意思" class="headerlink" title="SSR的PAC是什么意思"></a>SSR的PAC是什么意思</h4><blockquote>
<p>代理自动配置（英语：Proxy auto-config，简称PAC）是一种网页浏览器技术，用于定义浏览器该如何自动选择适当的代理服务器来访问一个网址。<br>一个PAC文件包含一个JavaScript形式的函数“FindProxyForURL(url, host)”。这个函数返回一个包含一个或多个访问规则的字符串。用户代理根据这些规则适用一个特定的代理器或者直接访问。当一个代理服务器&gt;无法响应的时候，多个访问规则提供了其他的后备访问方法。浏览器在访问其他页面以前，首先访问这&gt;个PAC文件。PAC文件中的URL可能是手工配置的，也可能是是通过网页的网络代理自发现协议（WPAD）自动配置的。<br>———— 截取自维基百科</p>
</blockquote>
<p>PAC中文名叫做代理自动配置，PAC其实就是 HTTP/SOCKS等代理服务器 + 网址规则，只有在你浏览器访问 网址规则中包含的网站 时才会走PAC文件中包含指定的HTTP/SOCKS代理服务器。</p>
<p>因为Shadowsocks作者喝茶后，原本维护更新的PAC（GFWlist）文件也被删除，不过现在由ShadowsocksR作者接手维护了（Github项目），由网友不断的提交新的被墙的网址和IP。目前分为网址白名单、黑名单、黑白名单，同时也有ip的名单。所以有时候访问一些网站，可能被墙或者打开很慢.</p>
<h4 id="SSR中的代理规则是什么"><a href="#SSR中的代理规则是什么" class="headerlink" title="SSR中的代理规则是什么"></a>SSR中的代理规则是什么</h4><p>ShadowsocksR目前分两种规则方式，那就是 PAC规则（系统代理模式） 和 代理规则 。</p>
<p>PAC规则 是根据PAC文件中的黑白地址名单来判断那些网站走代理。也就是判断 流量是否进入客户端。</p>
<p>当你要访问的网站满足 PAC里的设置，那么浏览器就会向代理服务器也就是客户端发送网站请求数据，这时候我们才进入了ShadowsocksR客户端，接下来我们就进入了代理规则判断环节。</p>
<p>代理规则 是根据IP判断，按设定的规则来判断进入 客户端的流量是直连还是走代理。</p>
<h4 id="关于-安全卫士-杀毒软件-浏览器-等说明"><a href="#关于-安全卫士-杀毒软件-浏览器-等说明" class="headerlink" title="关于 安全卫士/杀毒软件/浏览器 等说明"></a>关于 安全卫士/杀毒软件/浏览器 等说明</h4><p>各种国产杀毒/安全卫士和360/百度浏览器等软件都不能使用！简单给你们解释一下为什么。</p>
<p>安全卫士和杀毒软件，常常会在你访问 有病毒/木马网站 或者 嘿嘿嘿的网站的时候，突然弹窗提醒你这个网站不安全什么的。</p>
<p>他为什么知道这个网站不安全？因为他在监视你的一举一动，这很容易。</p>
<p>然后明知道国内在正常途径是不可能访问Google等网站，结果你突然 访问了Google等被墙的网站，那 安全卫士/杀毒软件 又不是傻子，自然知道你在使用代理或者VPN等方式科学上网。</p>
<p>杀毒软件和安全卫士都会以保护电脑不被侵害的理由监控电脑的一举一动，一旦你使用了vpn，他就可以检测到你正在使用vpn，虽然他无法知道你的传输数据，但是只要知道你在使用vpn就够了，然后再查询下你的ip就可以后台上传信息了，或许很快你的vpn的ip就被封了！</p>
<p>浏览器同样也是，比如你访问了国内根本不可能通过正常途径访问的网站（Google、Youtube），这样子浏览器肯定就知道你用了代理或者vpn，然后就会查一下ip然后上传信息，同样就会被封。</p>
<p>还有一些浏览器都有的同步数据功能，鬼知道他会不会借着同步你的数据作掩护去上传你的某些隐私和科学上网证据，反正加密了。对外声称这是在同步数据，骗过了大部分人。而且就算你关闭，他或许也会换个其他的理由继续上传，反正只要是个浏览器总不能禁止上传流量吧。</p>
<p>很多人会说：“我用了360安全卫士和360浏览器也没见到我的vpn/ss被封啊？”这只能说是时候未到，我们不应该把自己的vpn/ss安全寄托到不靠谱的希望上！我们要未雨绸缪，在问题出现前清除隐患！</p>
<p>大数据时代，就是要尽一切可能的收集任何用户的资料信息。</p>
<blockquote>
<p>PS:Win10系统自带的防御功能就很强了,没必要再装某管家…某卫士了…</p>
</blockquote>
<h4 id="关于保护隐私"><a href="#关于保护隐私" class="headerlink" title="关于保护隐私"></a>关于保护隐私</h4><p>360浏览器、百度浏览器等国内浏览器官方内置的科学上网功能都不支持使用，这些代理很可能会被用于中间人攻击。如果该“中间人”与浏览器官方同一阵线，那么浏览器验证机制就会放行这种攻击。国内产浏览器也不推荐使用，有用户透露，360浏览器在安装的过程中就引发了win7系统报警，证明该程序有规避认证的行为。全球三大桌面浏览器在隐私保护方面的比较一般认为，Firefox最优，其次是Chrome/Chromium，再其次是IE。</p>
<p>发照片自爆是很多网友的喜好，但经常发表敏感政治言论的网友这方面就要小心些了，很容易因此被人肉搜索到。另，建议登陆海外网站的时候尽可能不使用和在大陆平台上同样的昵称和同样的本人照片头像，即便墙内身份暴露，只要否认墙外身份，“有关部门”就基本无法获取证据。</p>
<p>很多社交平台都有分享地理位置的功能，比如墙内的微信、微博和墙外的推特等，但不推荐使用，如果您用的是苹果产品，可以直接选择在设置中关闭定位服务的方法来保护行踪隐私。</p>
<p>有些网站希望用户输入求学就业经历，以便联系到同学同事互相添加。如果该应用是大陆开发的产品就不推荐使用这项功能。您肯定有其他方式联系到您觉得值得联系的同学和同事。</p>
<p>尽可能不使用公共场合免费的wifi，如果遭遇恶意搭建的wifi，很容易被盗取个人信息，其他安全性不明的wifi网络也要谨慎选择。</p>
<p>曾经有网友曝，小米手机和小米平板都会在用户使用加密数据或使用VPN科学上网時，窃取数据并发送到北京某服務器；360系列软件则会监控用戶的qq、skype等通讯窃取数据。对于后者已能基本确信，对于前者建议谨慎选择以防患于未然。</p>
<p>国内产的杀毒软件也不推荐使用，比如：360“监控”猥士、腾讯“收集”管家、百度猥士，本网曾有报道，奇虎 360 投资的一家微型公司“麦芽地”，其前身是个人网站“麦克孤独”，被曝是“WireLurker(MacHook)”木马制作者和传播者。</p>
<h3 id="一些有必要去了解的"><a href="#一些有必要去了解的" class="headerlink" title="一些有必要去了解的"></a>一些有必要去了解的</h3><p>关于科学上网这方面还有一些东西需要去了解,在这里我不再复制…自己去查吧</p>
<ul>
<li>CNNIC根证书的危险及清除方法（科学上网必读）</li>
<li>如何防范中国网络“大炮”</li>
<li>科学上网的注意事项及相关法律（必读）</li>
</ul>
]]></content>
      
        <categories>
            
            <category> 技术流 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[想看的书]]></title>
      <url>/2017/07/09/Books/</url>
      <content type="html"><![CDATA[<p>1.《营销管理》，(美)菲利普·科特勒</p>
<p>2.&lt;&lt;计算机程序的构造和解释&gt;&gt; SS+</p>
<p>3.《UNIX环境高级编程》SS</p>
<p>4.《编程珠玑》S+</p>
<p>5.《算法导论》S+</p>
<p>6.《代码整洁之道》S</p>
<p>7.《重构》S 改善代码</p>
<p>8.《代码大全》S 用于查询</p>
<p>9.《程序员的自我修养》</p>
<p>10.《黑客与画家》 S</p>
<hr>
<h3 id="编程语言系-9-（转）"><a href="#编程语言系-9-（转）" class="headerlink" title="编程语言系 9+ （转）"></a>编程语言系 9+ （转）</h3><p>我当要学习某些技术时，第一时间就是去找相关的书籍。而豆瓣读书是我主要的参考依据，主要是它的评分基本比较靠谱，对于技术书籍，一般来说评分在8分以上就是不错的书籍了，而达到9分就可以列入”必读”系列了，所以我就打算总结一下豆瓣上评分9以上的技术书籍，本想一片文章完成的，可是经典著作太多了，因此这篇文章先把编程语言的书籍列出来。</p>
<p><strong>汇编语言:</strong></p>
<p>汇编语言（第2版） 9.3分</p>
<p><strong>c语言:</strong></p>
<p>c专家编程 本书讲了很多c语言的历史，很有趣 9.2分</p>
<p>c和指针 书名略有歧义，本书全面讲解了c语言，是一本入门佳作 9.0分</p>
<p>C程序设计语言 c语言之父作品，经典之作 9.4分</p>
<p>C语言程序设计_现代方法 一本不错的入门书籍 9.2分</p>
<p>C语言接口与实现 一本将c语言代码设计的著作 9.0分</p>
<p>嗨翻C语言 head first 系列，书的形式非常有趣 9.1分</p>
<p>C语言名题精选百则技巧篇 更像是一本算法书 9.0分</p>
<p>一站式学习C编程 国人出品的优秀之作 9.2分</p>
<p>编程精粹 教你如何写出良好的c程序 9.0分</p>
<p><strong>c++:</strong></p>
<p>C++ Primer 中文版(第4版 无需解释的经典c++著作 9.2分</p>
<p>C程序设计语言(特别版) 可能是因为翻译的原因，这本c之父的经典著作”仅”8.9分 8.9分</p>
<p>C语言的设计和演化 c之父又一经典之作 8.8分</p>
<p>Effective C中文版 想知道如何写出更好的c程序，看这本书 9.2分</p>
<p>More Effective C++中文版 推荐理由同上 8.9分</p>
<p>Effective STL中文版 你真的知道如何使用stl吗 8.8分</p>
<p>深度探索C++对象模型 内容较深，适合有经验的修炼内功 9.1分</p>
<p>C设计新思维 这本书向你展示c模板的高（奇）级（淫）技巧 8.9分</p>
<p><strong>c#:</strong></p>
<p>CLR via C#一书作者所著 9.4分</p>
<p>Head First C# Head first系列自然不会放过c# 9.0分</p>
<p>深入理解C#（第2版）一本全面讲解c#语言的优秀著作 9.0分</p>
<p>Microsoft.NET框架程序设计作者又一经典著作 9.1分</p>
<p>C#与 .NET 3.5高级程序设计 9.0分</p>
<p>.NET设计规范 9.1分</p>
<p><strong>java:</strong></p>
<p>Java编程思想（第4版） 9.1分  （推荐有基础再看）</p>
<p>Java并发编程实战 9.0分</p>
<p>Effective java 中文版（第2版）9.1分</p>
<p>Thinking in java 9.0分  S+难度较大</p>
<p>Java核心技术卷 8.9分 （入门推荐）</p>
<p>深入理解Java虚拟机 （8.6分）</p>
<p>Head First Java（第二版·中文版） 8.8分</p>
<p>Spring揭秘 9.0分</p>
<p><strong>javascript:</strong></p>
<p>JavaScript高级程序设计（第3版） 最好的Javascript入门书籍 9.3分</p>
<p>JavaScript权威指南(第6版) 犀牛书 8.9分</p>
<p>JavaScript语言精粹 短小精悍的书籍，深入讲解javascript优秀之作 9.1分</p>
<p>JavaScript设计模式与开发实践 国人出品，作者出身鹅肠 9.2分</p>
<p>精通JavaScript 大名鼎鼎的jquery作者著作 8.6分</p>
<p>你不知道的JavaScript（上卷） 非常棒的javacript讲解书籍 9.4分</p>
<p>你不知道的JavaScript（中卷） es6的很多特性在这本书中有非常深入的讲解 8.9分</p>
<p><strong>Python:</strong></p>
<p>从Python开始学编程 适合新手阅读 9.0分</p>
<p>Python编程：从入门到实践 同样是一本入门书籍 8.8分</p>
<p>Python源码剖析 据说这本书其实是讲c语言的 8.7分</p>
<p>深入浅出Python（影印版） Python的head first系列 8.5分</p>
<p><strong>Ruby:</strong></p>
<p>Ruby元编程 9.5分</p>
<p><strong>go语言:</strong></p>
<p>the Go Programming Language 9.3分</p>
<p>其实上面列出的并不是每一本评分都达到9分了，不过也十分经典，因此一并列出。</p>
<hr>
]]></content>
      
        <categories>
            
            <category> Books/Movies </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[想看的电影]]></title>
      <url>/2017/07/09/%E7%94%B5%E5%BD%B1/</url>
      <content type="html"><![CDATA[<h3 id="想看的电影"><a href="#想看的电影" class="headerlink" title="想看的电影"></a>想看的电影</h3><p>1.禁闭岛 8.6</p>
<p>2.无姓之人 8.2</p>
<p>3.僵尸肖恩 7.7</p>
<p>4.我是传奇 7.8</p>
<p>5.人类之子 7.4</p>
<p>6.大鱼海棠 6.6</p>
<p>7.恐怖游轮 8.3</p>
<blockquote>
<p>2016-12-11 已看</p>
</blockquote>
<p>8.黑洞频率 8.3</p>
<p>9.超时空接触 8.3</p>
<p>10.彗星来的那一夜（14年） 8.3</p>
<p>11.记忆碎片 8.5</p>
<blockquote>
<p>2017-03-04 已看</p>
</blockquote>
<p>12.未知死亡 8.0</p>
<p>13.泰坦尼克号 9.5</p>
<blockquote>
<p>2016-12-16 已看已哭瞎，爱情观被刷新<br>感谢小学班主任当初让我成熟点再看。</p>
</blockquote>
<p>14.寄生兽 7.4</p>
<p>15.西部世界（美剧） 9.1</p>
<p>16.疯狂的麦克斯4：狂暴之路 8.5</p>
<blockquote>
<p>已看，一般般</p>
</blockquote>
<p>17.死亡诗社 8.9</p>
<p>18.蝙蝠侠：黑暗骑士 9.0</p>
<blockquote>
<p>2017-4-4 已看，真TM好看</p>
</blockquote>
<p>19.黑客帝国三部曲 8.5</p>
<p>20.你的名字 8.6</p>
<blockquote>
<p>2016-12-04  很好看，超喜欢这种唯美画风的。</p>
</blockquote>
<p>21.钢之炼金术师FA 9.4 剧情一流 （动漫 65集）</p>
<p>22.银魂 9.6 据说看几集就会爱上。</p>
<p>23.自杀小队 8.2 因Heathens.而看</p>
<blockquote>
<p>已看，剧情一般，不过小丑他俩演的真不错，当然还是歌好听~</p>
</blockquote>
<p>24.永无止境 8.0</p>
<p>25.教父 9.2 三部曲</p>
<blockquote>
<p>已看，去年考试前几天通宵看完的。</p>
</blockquote>
<p>26.未麻的部屋 8.8</p>
<blockquote>
<p>已看，还不错吧。</p>
</blockquote>
<p>27.致命ID 8.6 （类禁闭岛）</p>
<p>28.降临 7.7</p>
<p>29.死侍 7.5</p>
<blockquote>
<p>2017-07-10 可能是心情不好,挺好笑的一部电影看着都没笑点…</p>
</blockquote>
<p><strong>丧尸类：</strong></p>
<p>1.群尸玩过界 Braindead (1992) 7.7 喜剧 血腥</p>
<p>2.僵尸肖恩 Shaun of the Dead (2004) 7.7 喜</p>
<p>3.活死人黎明 Dawn of the Dead (2004) 7.4</p>
<p>4.丧尸乐园 Zombieland (2009)/僵尸之地 7.2 恶搞 喜</p>
<p>5.请叫我英雄 アイアムアヒーロー (2016) 7.0</p>
<p><strong>评价 非常高的两部电影:</strong></p>
<p><em>恐怖</em>：第六感 The Sixth Sense (1999) 8.8 （千万别提前知道结局。）</p>
<p>———— 全美观众票选1999年最喜爱的影片。惊悚悬疑片，其中有几个镜头确实突兀吓了我一跳。猛男布鲁斯·威利斯向来演那种枪战动作片，例如虎胆龙威系列，此片算是文戏，但他的拿捏相当到位，里面的主角小演员简直是天才童星。</p>
<p><em>剧情类</em>：十二怒汉 12 Angry Men (1957) 9.3</p>
<p>———————知道这是一部牛片，只是没想到居然这么牛。</p>
]]></content>
      
        <categories>
            
            <category> Books/Movies </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[用Atom打造最骚的markdown编辑器]]></title>
      <url>/2017/07/09/%E7%94%A8Atom%E6%89%93%E9%80%A0%E6%9C%80%E9%AA%9A%E7%9A%84markdown%E7%BC%96%E8%BE%91%E5%99%A8/</url>
      <content type="html"><![CDATA[<h2 id="前言："><a href="#前言：" class="headerlink" title="前言："></a>前言：</h2><p>这几天忙活了下，终于搭建好了网站。但写文章是要用到markdown编辑器的</p>
<p>找来找去没有找到一款喜欢的，也是懒得再下什么了，在网上看到一个教程</p>
<p>可以把Atom打造成一款很棒的markdown编辑器，所以我决定开刚，然鹅，</p>
<p>刚是刚了，但是自己动起手来却没教程那么如意，整了半天总算是成功了。</p>
<p>现在我就用它发布了这篇文章</p>
<p>而我们为什么选择它呢？</p>
<p><strong>Ctrl+C  +  Ctrl+V：↓</strong></p>
<blockquote>
<p>Atom是GitHub推出的一款编辑器, 被称为21世纪的黑客编辑器. 其主要的特点是现代, 易用, 可定制.<br>本人以前用过多款编辑器, 现在来总结一下个人对各编辑器的看法:<br>Vim是我使用最久也是最折腾的编辑器<br>其优点是逼格高, 定制性强, 编辑效率高, 资源占用少, 还可以终端操作.</p>
</blockquote>
<p>好，废话不多说，下面开搞！！</p>
<h2 id="安装Atom"><a href="#安装Atom" class="headerlink" title="安装Atom"></a>安装Atom</h2><p>1.下载安装: <a href="https://atom.io/" target="_blank" rel="external"><font color="green">Atom</font></a></p>
<p>好，在成功安装好Atom后，我们还需要下载并安装插件</p>
<h3 id="安装插件"><a href="#安装插件" class="headerlink" title="安装插件"></a>安装插件</h3><p>我太懒了，所以就放一个链接吧：<a href="http://blog.csdn.net/u010494080/article/details/50605654" target="_blank" rel="external"><font color="blue">关于Atom插件的安装</font></a></p>
<p>这个链接还有Atom的其他教程，适合刚接触Atom的看。</p>
<h3 id="以下几款插件加上去可以让你的Atom写markdown"><a href="#以下几款插件加上去可以让你的Atom写markdown" class="headerlink" title="以下几款插件加上去可以让你的Atom写markdown"></a>以下几款插件加上去可以让你的Atom写markdown</h3><h4 id="1-增强预览-markdown-preview-plus"><a href="#1-增强预览-markdown-preview-plus" class="headerlink" title="1.增强预览(markdown-preview-plus)"></a>1.增强预览(markdown-preview-plus)</h4><p>Atom自带的Markdown预览插件markdown-preview功能比较简单，markdown-preview-plus对其做了功能扩展和增强。</p>
<p>支持预览实时渲染。(Ctrl + Shift + M)</p>
<p>支持Latex公式。(Ctrl + Shift + X)</p>
<p><strong>注意!</strong> 使用该插件前，需要先 <strong>禁用markdown-preview</strong> 。</p>
<h4 id="2-同步滚动-markdown-scroll-sync"><a href="#2-同步滚动-markdown-scroll-sync" class="headerlink" title="2.同步滚动(markdown-scroll-sync)"></a>2.同步滚动(markdown-scroll-sync)</h4><p>同步滚动是Markdown编辑器的必备功能，方便翻阅文档修改时能快速定位到预览的位置。</p>
<p>markdown-scroll-sync不仅支持同步滚动，在光标位置发生变更时也会同步滚动</p>
<p>这个功能在很多Markdown编辑器中不具备。</p>
<h4 id="3-代码增强-language-markdown"><a href="#3-代码增强-language-markdown" class="headerlink" title="3.代码增强(language-markdown)"></a>3.代码增强(language-markdown)</h4><p>一般的Markdown编辑器提供了代码着色等基本功能，language-markdown除了能给代码着色</p>
<p>还提供了快捷的代码片段生成等功能。</p>
<h4 id="4-图片粘贴-markdown-image-paste"><a href="#4-图片粘贴-markdown-image-paste" class="headerlink" title="4.图片粘贴(markdown-image-paste)"></a>4.图片粘贴(markdown-image-paste)</h4><p>图片功能支持的好坏直接决定了我们是否选择使用一个Markdown编辑器。也有不少编辑器和在线</p>
<p>的图床绑定，但是这种方式受限于网络。虽然Markdown支持插入本地图片，但是每次插入新图片</p>
<p>都是一堆重复操作：截图－命名－保存－插入。markdown-image-paste将这些操作一步完成：</p>
<p>使用截图工具将图片复制到系统剪切板。</p>
<p>在Markdown新起一行输入文件名。</p>
<p>Ctrl + V 会自动把图片保存到Markdown文件相同目录下(因此要求Markdown文件应该先保存</p>
<p>并命名为刚输入的文件名，同时在刚才输入文件名行处生成img标签。</p>
<p>不过gif图就不这样做了，这个另外查吧。</p>
<h4 id="5-表格编辑-markdown-table-editor"><a href="#5-表格编辑-markdown-table-editor" class="headerlink" title="5.表格编辑(markdown-table-editor)"></a>5.表格编辑(markdown-table-editor)</h4><p>Markdown的table语法很无爱，直到遇到了markdown-table-editor</p>
<p>使用详情请看插件自带演示</p>
<h4 id="6-pdf导出-markdown-themeable-pdf、pdf-view"><a href="#6-pdf导出-markdown-themeable-pdf、pdf-view" class="headerlink" title="6.pdf导出(markdown-themeable-pdf、pdf-view)"></a>6.pdf导出(markdown-themeable-pdf、pdf-view)</h4><p>不少Markdown编辑器都会提供pdf导出功能，甚至将其作为收费功能。</p>
<p>而Atom的markdown-themeable-pdf、pdf-view插件可以轻松实现pdf导出和预览功能。</p>
<blockquote>
<h4 id="以上六款插件能够让你的Atom独领风骚。"><a href="#以上六款插件能够让你的Atom独领风骚。" class="headerlink" title="以上六款插件能够让你的Atom独领风骚。"></a>以上六款插件能够让你的Atom独领风骚。</h4></blockquote>
<h3 id="遇到的坑——插件无法安装"><a href="#遇到的坑——插件无法安装" class="headerlink" title="遇到的坑——插件无法安装"></a>遇到的坑——插件无法安装</h3><p><strong>其实，这才是我想写这篇博文的理由</strong></p>
<p>教程很简单如果可以安装插件的话那很顺利，</p>
<p>但坑爹的是，插件不能安装是不是？？</p>
<p>atom通过setting中无法下载插件</p>
<p>通过apm也无法下载插件</p>
<p>可能是网络、config配置的问题，不好解决。</p>
<hr>
<p>好，下面我来提供解决Windows下Atom插件安装失败的方法</p>
<p>纯手动但基本属于万金油方法：</p>
<p>1.打开Atom –&gt; File –&gt; Settings –&gt; Install  –&gt; 下面看图</p>
<p>注意图中的路径<img src="http://ossdpnhoy.bkt.clouddn.com/bowensQQ%E5%9B%BE%E7%89%8720170709030602.png" alt="lujin"></p>
<p>复制，然后用电脑打开（不是用浏览器）</p>
<p>这个路径是Atom插件安装的位置</p>
<p>2，打开 <a href="https://atom.io/packages" target="_blank" rel="external"><font color="red">Atom插件官网</font></a> 查找上述或者需要的插件</p>
<p>3，选择插件中的repo，复制github地址</p>
<p>4，在步骤一的文件夹中运行git bash命令</p>
<p>5.下载插件包 在git bash中输入：git clone (你复制的github链接,注意复制前要有个空格)</p>
<p>6.注意！这时候只是把插件下载到了路径下，而没有安装。</p>
<p>7.等安装完后插件文件夹会出现插件的名字，接着，打开刚安装的插件文件夹，然后在文件夹中运行git bash命令</p>
<p>8.在git bash中输入 :<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm install</div></pre></td></tr></table></figure></p>
<p>等待片刻安装完成，安装的时间与网络有关，有时候需要等久一点。</p>
<p>10.下面是安装成功的示例图：<br><img src="http://ossdpnhoy.bkt.clouddn.com/Atom1.jpg" alt="tu1"></p>
<p>安装成功后鼠标会回到$符号后<br><img src="http://ossdpnhoy.bkt.clouddn.com/Atom2.png" alt="tu2"></p>
<hr>
<h4 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h4><p>这就是比较万金油的纯手动法解决Atom插件安装失败的方法。</p>
<p>如果在该教程中有问题的，可以联系我，在博客主页上面有我的联系方式</p>
<p>点击右边的按钮再点下面的Email Me 就可以直接QQ对话。如果我会的，我可以帮你解决。</p>
<p>好了，困死我了。睡觉</p>
]]></content>
      
        <categories>
            
            <category> 技术流 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Atom markdown </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Unity3D]]></title>
      <url>/2017/07/08/Unity3D/</url>
      <content type="html"></content>
      
        <categories>
            
            <category> Unity3D </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[关于s/*和谐*/s的搭建]]></title>
      <url>/2017/07/08/%E5%85%B3%E4%BA%8Ess%E7%9A%84%E6%90%AD%E5%BB%BA/</url>
      <content type="html"><![CDATA[<h3 id="1-下载安装Xshell"><a href="#1-下载安装Xshell" class="headerlink" title="1.下载安装Xshell"></a>1.下载安装Xshell</h3><p>安装完后连接服务器</p>
<h3 id="2-安装脚本"><a href="#2-安装脚本" class="headerlink" title="2.安装脚本"></a>2.安装脚本</h3><blockquote>
<p>下载脚本</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">wget -O ss.sh http://zhangdanyang.com/file/ss.sh</div></pre></td></tr></table></figure>
<blockquote>
<p>执行脚本</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">bash ss.sh</div></pre></td></tr></table></figure>
<blockquote>
<p>设置端口号并回车，直接回车是设置为1225</p>
<p>Please enter PORT(1225 default):</p>
<p>设置密码并回车，直接回车是设置为123456(建议改)</p>
<p>Please enter PASSWORD(123456 default):</p>
<p>等待一会……就完成了（初次执行约2-5min）</p>
</blockquote>
<h3 id="3-更新python"><a href="#3-更新python" class="headerlink" title="3.更新python"></a>3.更新python</h3><p>如果是centOS 6的版本那么python是2.6.6的,这时候安装组件pip会有警告</p>
<p>所以需要更新,方法:</p>
<ul>
<li>1.百度/google</li>
<li>2.复制已有脚本(已挂在QQ里)按提示更新.<blockquote>
<p>注意,如更新python2.7是  sh gsetup.sh   然后 再回车  回车 4 回车;</p>
</blockquote>
</li>
</ul>
<h3 id="4-搭建SS"><a href="#4-搭建SS" class="headerlink" title="4.搭建SS"></a>4.搭建SS</h3><ul>
<li>安装组件<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$ yum install m2crypto python-setuptools</div><div class="line">$ easy_install pip</div><div class="line">$ pip install shadowsocks</div></pre></td></tr></table></figure>
</li>
</ul>
<blockquote>
<p>如果没更新python 第三个组件会警告</p>
</blockquote>
<ul>
<li>安装完成后配置服务器参数</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ vi  /etc/shadowsocks.json</div></pre></td></tr></table></figure>
<p>写入如下配置(修改)<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">    &quot;server&quot;:&quot;0.0.0.0&quot;,</div><div class="line">    &quot;server_port&quot;:443,    #注意端口修改</div><div class="line">    &quot;local_address&quot;: &quot;127.0.0.1&quot;,</div><div class="line">    &quot;local_port&quot;:1080,</div><div class="line">    &quot;password&quot;:&quot;123456&quot;,  # 如果注意密码和之前修改的匹配</div><div class="line">    &quot;timeout&quot;:300,</div><div class="line">    &quot;method&quot;:&quot;aes-256-cfb&quot;,</div><div class="line">    &quot;fast_open&quot;: false</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h3 id="5-防火墙配置-SS-iptables-centos-6"><a href="#5-防火墙配置-SS-iptables-centos-6" class="headerlink" title="5.防火墙配置(SS iptables centos 6)"></a>5.防火墙配置(SS iptables centos 6)</h3><ul>
<li>初始化</li>
</ul>
<p>首先进行一些初始化，清空所有现有的规则：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">#先允许所有,不然有可能会杯具</div><div class="line">iptables -P INPUT ACCEPT</div><div class="line"></div><div class="line">iptables -F #清空所有链 ,此步骤有可能导致Xshell连接断开这可能是因为端口22的原因(如果没有上一步的话),重启服务器再链接即可.</div><div class="line"></div><div class="line">iptables -X #清空所有自定义链</div></pre></td></tr></table></figure></p>
<ul>
<li>定规则</li>
</ul>
<p>定义规则：</p>
<p>由于我们的目的是放弃所有无关于shadowsocks的数据，也就是说默认丢弃所有数据</p>
<p>，只接受满足条件的数据，无疑是一种很安全的做法。</p>
<p>首先添加ssh端口：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">iptables -A INPUT -p tcp --dport 22 -j ACCEPT #22自行修改，如我设置的 8888 端口</div></pre></td></tr></table></figure></p>
<p>添加以下六条规则：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">iptables -A INPUT -p icmp --icmp-type any -j ACCEPT</div><div class="line">iptables -A INPUT -s localhost -d localhost -j ACCEPT</div><div class="line">iptables -A INPUT -m state --state ESTABLISHED,RELATED -j ACCEPT</div><div class="line">iptables -A OUTPUT -p icmp --icmp any -j ACCEPT</div><div class="line">iptables -A OUTPUT -s localhost -d localhost -j ACCEPT</div><div class="line">iptables -A OUTPUT -m state --state ESTABLISHED,RELATED -j ACCEPT</div></pre></td></tr></table></figure></p>
<blockquote>
<p>解释分别是:</p>
<p>1.#允许icmp包进入</p>
<p>2.#允许本地的数据包</p>
<p>3.#允许已经建立和相关的数据包进入</p>
<p>4.#允许icmp包出去</p>
<p>5.#允许本地数据包</p>
<p>6.#允许已经建立和相关的数据包出去</p>
</blockquote>
<p>需要注意的是，以上的七条基本上是 <strong>必须添加</strong> 的；下面开始添加其他必要端口：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">iptables -A OUTPUT -p udp --dport 53 -j ACCEPT</div><div class="line">iptables -A OUTPUT -p tcp -m state --state NEW --dport 80 -j ACCEPT</div><div class="line">iptables -A INPUT -m state --state ESTABLISHED,RELATED -j ACCEPT</div><div class="line">iptables -A INPUT -p tcp --dport 443 -j ACCEPT</div></pre></td></tr></table></figure>
<blockquote>
<p>分别解释为:</p>
<p>1.#打开DNS需要用到的53端口</p>
<p>2.#允许80端口tcp协议的第一个数据包</p>
<p>3.#允许ESTABLISHED和RELATED状态的包</p>
<p>4.#打开https需要用到的443端口</p>
</blockquote>
<ul>
<li>保存配置和重启</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">service iptables save  #保存配置</div><div class="line"></div><div class="line">service iptables restart #重启iptables</div></pre></td></tr></table></figure>
<p>请注意，重启命令如果是CentOS 6的</p>
<h3 id="6-启用ss服务"><a href="#6-启用ss服务" class="headerlink" title="6.启用ss服务"></a>6.启用ss服务</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ ssserver -c /etc/shadowsocks.json</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ nohup ssserver -c /etc/shadowsocks.json &amp;   #允许后台运行</div></pre></td></tr></table></figure>
<h3 id="7-连接"><a href="#7-连接" class="headerlink" title="7.连接"></a>7.连接</h3><p>下载Shadow Socks客户端。SS加速器客户端下载</p>
<p>选择适合的版本，下载并解压运行。</p>
<p>填写信息:服务器地址，端口号，密码，加密方式与代理端口默认即可</p>
]]></content>
      
        <categories>
            
            <category> 技术流 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[关于CentOS6/7iptables的配合科学**的配置]]></title>
      <url>/2017/07/08/CentOS67iptables%E9%85%8D%E7%BD%AE/</url>
      <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>emmmmmm……</p>
<p>关于这方面的坑碰到的太多了,每次都做的差不多了,就差这一步…</p>
<p>在找了N久后,终于找到了一个灰常满意的答案,我决定直接写下来用以释放我心中奔腾的十万只草泥马….</p>
<h4 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h4><ul>
<li>CentOS6</li>
<li>你懂得</li>
<li>iptables</li>
</ul>
<blockquote>
<p>在安装了ss-bash后，ss-bash每添加一次port就会在iptables中的SSOUTPUT和SSINPUT中添加相对应的port作为ACCEPT，所以我们只需保留部分必备port，将其他端口DROP就可以了。</p>
</blockquote>
<h3 id="CentOS6"><a href="#CentOS6" class="headerlink" title="CentOS6"></a>CentOS6</h3><h4 id="初始化"><a href="#初始化" class="headerlink" title="初始化"></a>初始化</h4><p>由于我们的目的是放弃所有无关于shadowsocks的数据，也就是说默认丢弃所有数据</p>
<p>只接受满足条件的数据，无疑是一种很安全的做法。</p>
<p>首先添加ssh端口：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">iptables -A INPUT -p tcp --dport 22 -j ACCEPT</div><div class="line"></div><div class="line">#22自行修改，如我设置的 8888 端口</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line">添加以下六条规则：</div><div class="line">iptables -A INPUT -p icmp --icmp-type any -j ACCEPT</div><div class="line">#允许icmp包进入</div><div class="line"></div><div class="line">iptables -A INPUT -s localhost -d localhost -j ACCEPT</div><div class="line">#允许本地的数据包</div><div class="line"></div><div class="line">iptables -A INPUT -m state --state ESTABLISHED,RELATED -j ACCEPT</div><div class="line">#允许已经建立和相关的数据包进入</div><div class="line"></div><div class="line">iptables -A OUTPUT -p icmp --icmp any -j ACCEPT</div><div class="line">#允许icmp包出去</div><div class="line"></div><div class="line">iptables -A OUTPUT -s localhost -d localhost -j ACCEPT</div><div class="line">#允许本地数据包</div><div class="line"></div><div class="line">iptables -A OUTPUT -m state --state ESTABLISHED,RELATED -j ACCEPT</div><div class="line">#允许已经建立和相关的数据包出去</div></pre></td></tr></table></figure>
<p><strong>需要注意的是，以上的七条基本上是必须添加的；下面开始添加其他必要端口：</strong></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">iptables -A OUTPUT -p udp --dport 53 -j ACCEPT</div><div class="line"> #打开DNS需要用到的53端口</div><div class="line"></div><div class="line">iptables -A OUTPUT -p tcp -m state --state NEW --dport 80 -j ACCEPT</div><div class="line">#允许80端口tcp协议的第一个数据包</div><div class="line"></div><div class="line">iptables -A INPUT -m state --state ESTABLISHED,RELATED -j ACCEPT</div><div class="line">#允许ESTABLISHED和RELATED状态的包</div><div class="line"></div><div class="line">iptables -A INPUT -p tcp --dport 443 -j ACCEPT</div><div class="line">#打开https需要用到的443端口</div></pre></td></tr></table></figure>
<p><strong>请注意，重启命令如果是CentOS 6 可以这样执行</strong><br> <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">service iptables save #保存配置</div><div class="line"></div><div class="line">service iptables restart #重启iptables</div></pre></td></tr></table></figure></p>
<h3 id="CentOS7-配置iptables"><a href="#CentOS7-配置iptables" class="headerlink" title="CentOS7 配置iptables"></a>CentOS7 配置iptables</h3><blockquote>
<p>CentOS从7.0开始，默认防火墙更改为firewall</p>
<p>但如果想继续使用iptables，请按照以下命令执行：</p>
</blockquote>
<p>关闭firewall：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">systemctl stop firewalld.service #关闭firewall</div><div class="line"></div><div class="line">systemctl disable firewalld.service #禁止firewall开机启动</div></pre></td></tr></table></figure></p>
<p>安装iptables：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">yum install iptables-services</div><div class="line"></div><div class="line">#安装iptables;安装前可先‘iptables -L -n’测试是否安装</div></pre></td></tr></table></figure>
<p>之后按照以上的CentOS 6 进行配置，但需要注意的是，7.0的重启命令为：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">systemctl restart iptables.service  #重启iptables</div></pre></td></tr></table></figure></p>
<p>另外还需要设置开机启动（7.0）<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">systemctl enable iptables.service   #设置iptables开机启动</div></pre></td></tr></table></figure></p>
<p>至此，关于iptables配置已经完成</p>
<h3 id="iptables的补充"><a href="#iptables的补充" class="headerlink" title="iptables的补充"></a>iptables的补充</h3><h4 id="iptables的state各个状态的含义"><a href="#iptables的state各个状态的含义" class="headerlink" title="iptables的state各个状态的含义:"></a>iptables的state各个状态的含义:</h4><blockquote>
<p>state只有四种状态：NEW，ESTABLISHED，RELATED 和INVALID它们主要是和状态匹配一起使用。</p>
</blockquote>
<p>下面就简要地介绍以下这几种状态：</p>
<h4 id="数据包在用户空间的状态"><a href="#数据包在用户空间的状态" class="headerlink" title="数据包在用户空间的状态"></a>数据包在用户空间的状态</h4><p>State（状态） Explanation（注释）</p>
<hr>
<p>NEW：<br>NEW说明这个包是我们看到的第一个包。意思就是</p>
<p>这是conntrack模块看到的某个连接第一个包，它即将被匹配了。</p>
<p>比如，我们看到一个SYN 包，是我们所留意的连接的第一个包，就要匹配它。</p>
<p>第一个包也可能不是SYN包，但它仍会被认为是NEW状态。这样做有时会导致一些问题</p>
<p>但对某些情况是有非常大的帮助的。例如，在 我们想恢复某条从其他的防火墙丢失的</p>
<p>连接时，或者某个连接已经超时，但实际上并未关闭时。</p>
<hr>
<hr>
<p>ESTABLISHED:</p>
<p>ESTABLISHED已经注意到两个方向上的数据传输，而且会继续匹配这个连接的包。</p>
<p>处于ESTABLISHED状态的连接是非常容易理解的。只要发送并接到应答，</p>
<p>连接就是ESTABLISHED的了。一个连接要从NEW变 为ESTABLISHED，只需要接到应答包即</p>
<p>可，不管这个包是发往防火墙的，还是要由防 火墙转发的。ICMP的错误和重定向等信息</p>
<p>包也被看作是ESTABLISHED，只要它们是我们所发出的信息的应答。</p>
<hr>
<hr>
<p>RELATED:</p>
<p>RELATED是个比较麻烦的状态。当一个连接和某个已处于ESTABLISHED状态的连接有关</p>
<p>系时，就被认为是RELATED的了。</p>
<p>换句话说，一个连接要想是RELATED的，首先要有一个ESTABLISHED的连接。</p>
<p>这个ESTABLISHED连接再产生一个主连接之外的连接，这个新的连接就是RELATED的了</p>
<p>当然前提是conntrack模块要能理解RELATED。ftp是个很好的例子，FTP-data连接</p>
<p>就是和FTP-control有RELATED的。还有其他的例子，比如，通过IRC的DCC连接。</p>
<p>有了这个状态，ICMP应答、FTP传输、DCC等才能穿过防火墙正常工作。</p>
<p>注意，大部分还有一些UDP协议都依赖这个机制。这些协议是很复杂的，它们把连接信息放在</p>
<p>数据包里，并且要求这些信息能被正确理解。</p>
<hr>
<hr>
<p>INVALID:</p>
<p>INVALID说明数据包不能被识别属于哪个连接或没有任何状态。</p>
<p>有几个原因可以产生这种情况，比如，内存溢出，收到不知属于哪个连接的ICMP错误信息。</p>
<p>一般地，我们DROP这个状态的任何东西。</p>
<hr>
<p><strong>另外还有一些描述更为简单的说明：</strong></p>
<hr>
<p>NEW：<br>当你在使用UDP、TCP、ICMP等协议时，发出的第一个包的状态就是“NEW”。</p>
<hr>
<p>ESTABLISHED:</p>
<p>当你在使用TCP、UDP、ICMP等协议时：假设你的主机发出的第一个包成功穿越防火墙</p>
<p>那么接下来你的主机 发出和接收到的包的状态都是“ESTABLISHED”。</p>
<hr>
<p>RELATED:</p>
<p>当你执行Linux下执行traceroute（Windows下对应的命令为tracert）命令时，</p>
<p>这个traceroute会发出一个封包，该封包的TTL（生存时间，Time To Live）为1，</p>
<p>当这个包遇到路由器的时候它的TTL会减少1，这时TTL = 0，然后这个包会被丢弃，</p>
<p>丢弃这个包的路由器会返回一个ICMP Type 11的封包给你，</p>
<p>并告诉你那个发出的数据包气数已尽。</p>
<p>而这个ICMP Type 11的链接状态就是“RELATED”。</p>
<hr>
<p>INVALID:</p>
<p>状态为INVALID的包就是状态不明的包，也就是不属于前面3中状态的包，</p>
<p>这类包一般会被视为恶意包而被丢弃。</p>
<hr>
<p><a href="http://www.cnblogs.com/3body/p/6140150.html" target="_blank" rel="external"><em>from:这个男人来自三体</em></a></p>
]]></content>
      
        <categories>
            
            <category> 技术流 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[Python]]></title>
      <url>/2017/07/08/Python/</url>
      <content type="html"></content>
      
        <categories>
            
            <category> Python </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[CSharp]]></title>
      <url>/2017/07/08/CSharp/</url>
      <content type="html"></content>
      
        <categories>
            
            <category> C/C++ C# </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[RE:从零开始的Java(一.基础部分)]]></title>
      <url>/2017/07/08/RE%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E7%9A%84Java/</url>
      <content type="html"><![CDATA[<h3 id="Java语言基础"><a href="#Java语言基础" class="headerlink" title="Java语言基础"></a>Java语言基础</h3><h4 id="标识符中常见的命名规则"><a href="#标识符中常见的命名规则" class="headerlink" title="标识符中常见的命名规则"></a>标识符中常见的命名规则</h4><ul>
<li><p>见名知意:</p>
<p>A:包</p>
<ul>
<li>最好是域名倒过来,要求所有的字母小写</li>
</ul>
<p>B:类或者接口</p>
<ul>
<li>如果是一个单词首字母大写.</li>
<li>如果是多个单词每个单词首字母大写(驼峰标识)</li>
</ul>
<p>C:方法或者变量</p>
<ul>
<li>如果是一个单词全部小写</li>
<li>如果是多个单词,从第二个单词首字母大写</li>
</ul>
<p>D:常量</p>
<ul>
<li>如果是一个单词,所有字母大写</li>
<li>如果是多个单词,所有的单词大写,用下划线区分每个单词</li>
</ul>
</li>
</ul>
<h4 id="原码补码和反码"><a href="#原码补码和反码" class="headerlink" title="原码补码和反码"></a>原码补码和反码</h4><p><img src="http://ossdpnhoy.bkt.clouddn.com/%E7%A0%81.jpg" alt="1"></p>
<h4 id="数据类型的概述和分类"><a href="#数据类型的概述和分类" class="headerlink" title="数据类型的概述和分类"></a>数据类型的概述和分类</h4><p>A:数据类分类(4类8种)</p>
<ul>
<li><p>整数型:</p>
<ul>
<li>byte 占一个字节 -128~127</li>
<li>short 占两个字节 -2^15~2^15-1</li>
<li>int 占四个字节 -2^31~2^31-1</li>
<li>long 占八个字节 -2^63~2^63-1</li>
</ul>
</li>
<li><p>浮点型:</p>
<ul>
<li>float   占四个字节   -3.403E38~3.40E38 单精度</li>
<li>double  占八个字节   -1.798E308~1.798E308 双精度</li>
</ul>
</li>
</ul>
<ul>
<li><p>字符型:</p>
<ul>
<li>char 占两个字节    <font color="red">0~65535 </font></li>
</ul>
</li>
<li><p>布尔型:</p>
<ul>
<li>boolean:<ul>
<li><font color="red">boolean理论上是占八分之一字节,因为一个开关就可以决定是true和false了,但是java中boolean类型没有明确指定他的大小 </font>

</li>
</ul>
</li>
</ul>
</li>
</ul>
<h4 id="java中的常量优化机制及-的面试题"><a href="#java中的常量优化机制及-的面试题" class="headerlink" title="java中的常量优化机制及++的面试题"></a>java中的常量优化机制及++的面试题</h4><p><img src="http://ossdpnhoy.bkt.clouddn.com/%E5%B8%B8%E9%87%8F%E4%BC%98%E5%8C%96%E6%9C%BA%E5%88%B6.jpg" alt="2"><br>所谓常量优化机制是:</p>
<p>先计算 (int)3+(int)4=(int)7</p>
<p>那 明明是int类型的  为什么第二种就不报错呢?</p>
<p>因为  计算结果7在  byte 的 -128~127  之间</p>
<hr>
<p><img src="http://ossdpnhoy.bkt.clouddn.com/%E5%8A%A0%E5%8A%A0%E9%9D%A2%E8%AF%95%E9%A2%98.png" alt="加加"><br>b++中的++是运算符, 它需要有结果  所以在底层就帮你强转了.</p>
<p>而第二种b=b+1:<br>当byte与int进行混合运算的时候,会提升为int类型</p>
<p>两个int相加的结果还是int,int再赋值给byte,会报错,提示精度损失.</p>
<h4 id="long和float范围比较"><a href="#long和float范围比较" class="headerlink" title="long和float范围比较"></a>long和float范围比较</h4><p><img src="http://ossdpnhoy.bkt.clouddn.com/long%E5%92%8Cfloat%E8%8C%83%E5%9B%B4%E6%AF%94%E8%BE%83.jpg" alt="3"></p>
<h4 id="号和字符串"><a href="#号和字符串" class="headerlink" title="+号和字符串"></a>+号和字符串</h4> <font color="red">任何数据类型用’+’号与字符串相连接都会产生新的字符串</font>

<p> <img src="http://ossdpnhoy.bkt.clouddn.com/string%E4%B8%8E%E5%8A%A0%E5%8F%B7.png" alt="string"></p>
<p> 图中第一,第二句显示的代码如下:<br> <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">System.out.println(&quot;hello&quot;+&apos;a&apos;+1);</div><div class="line">System.out.println(&apos;a&apos;+1+&quot;hello&quot;);</div></pre></td></tr></table></figure></p>
<h4 id="运算符"><a href="#运算符" class="headerlink" title="%运算符"></a>%运算符</h4><ul>
<li>当左边的绝对值小于右边绝对值时,结果是左边</li>
<li>当左边的绝对值等于右边或是右边的倍数时,结果是0</li>
<li>当左边的绝对值大于右边绝对值时,结果是余数</li>
<li><font color="red">%运算符结果的符号只和左边有关系,与右边无关</font></li>
<li><font color="red">任何一个正整数%2结果不是0就是1,可以用来当做切换条件.</font>

</li>
</ul>
<h4 id="amp-amp-和-amp-的区别以及异或运算符-位运算符"><a href="#amp-amp-和-amp-的区别以及异或运算符-位运算符" class="headerlink" title="&amp;&amp;和&amp;的区别以及异或运算符,位运算符"></a>&amp;&amp;和&amp;的区别以及异或运算符,位运算符</h4><h5 id="amp-amp-和-amp-重要"><a href="#amp-amp-和-amp-重要" class="headerlink" title="&amp;&amp;和&amp;(重要)"></a>&amp;&amp;和&amp;(重要)</h5><p> <img src="http://ossdpnhoy.bkt.clouddn.com/%E5%8D%95%E4%B8%8E%E5%92%8C%E5%8F%8C%E4%B8%8E.png" alt="双与和单与"></p>
<h5 id="运算符-异或"><a href="#运算符-异或" class="headerlink" title="^运算符(异或)"></a>^运算符(异或)</h5><p> <img src="http://ossdpnhoy.bkt.clouddn.com/%E5%BC%82%E6%88%96%E8%BF%90%E7%AE%97%E7%AC%A6.png" alt="^运算符"></p>
<blockquote>
<p>第三种记忆方法:左边x y x  右边x^y   x^y  x^y</p>
</blockquote>
<h5 id="位运算符"><a href="#位运算符" class="headerlink" title="位运算符"></a>位运算符</h5><p> <img src="http://ossdpnhoy.bkt.clouddn.com/%E5%B7%A6%E5%8F%B3%E7%A7%BB%E8%BF%90%E7%AE%97%E7%AC%A6.png" alt="位运算符"></p>
<h4 id="java基础语言部分总结"><a href="#java基础语言部分总结" class="headerlink" title="java基础语言部分总结"></a>java基础语言部分总结</h4><ul>
<li><h5 id="一般-之间没有-符号"><a href="#一般-之间没有-符号" class="headerlink" title="一般() {} 之间没有;符号"></a>一般() {} 之间没有;符号</h5></li>
<li><h5 id="switch-结束只有两种情况-1-遇到break-2-遇到右大括号"><a href="#switch-结束只有两种情况-1-遇到break-2-遇到右大括号" class="headerlink" title="switch 结束只有两种情况,1.遇到break  2.遇到右大括号 }"></a>switch 结束只有两种情况,1.遇到break  2.遇到右大括号 }</h5></li>
<li><h5 id="for语句"><a href="#for语句" class="headerlink" title="for语句"></a>for语句</h5><ul>
<li><p>for语句内的定义的变量使用后就会被释放.</p>
</li>
<li><p>这是它和其他两种循环语句的一个明显区别(其他两种要先在循环体外初始化)</p>
</li>
<li><p>当不知道用哪种循环时,可以用for,因为变量早早的释放掉,可以提高程序运行效率.</p>
</li>
<li><h5 id="对for嵌套举例理解"><a href="#对for嵌套举例理解" class="headerlink" title="对for嵌套举例理解:"></a>对for嵌套举例理解:</h5></li>
</ul>
<blockquote>
<p>for的嵌套循环可以这么理解:相当于时钟<br>外循环走一次—内循环走一圈(走完完整一次)(时针走一小时,分针走一圈)</p>
</blockquote>
<p>正常模式下循环次数与条件的关系<br>(不考虑循环体的改变如加break):</p>
<p> for(i=1;i&lt;=4;i++)循环执行1–&gt;2–&gt;3–&gt;4   一共4次</p>
<p> 若是i=0  那么循环执行5次</p>
<p> 又当 for(i=1;i&lt;4;i++) 时</p>
<p> 循环执行 1–&gt;2–&gt;3   一共4-1=3次 若是i=0 那么循环执行4-0=4次</p>
<p> 由上可知:</p>
<p> 当初始参数为1  条件为&lt;= 时, 执行次数就是  条件数字</p>
<p> 当初始参数为0   条件为&lt;=时,   执行次数是 条件数字+1</p>
<p> 而当条件为&lt;时,   循环次数=循环条件-初始参数</p>
<blockquote>
<p>当内循环的循环条件为外循环的自增变量时,会有奇效(如可以打印正三角形/99乘法表)    通常可以设置成: 外循环是行,内循环是列 (行,列)</p>
</blockquote>
</li>
</ul>
<h4 id="mark标号"><a href="#mark标号" class="headerlink" title="mark标号"></a>mark标号</h4><p>mark标号:<br> 格式: “合法字符:”   如<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">outer:for(i=1;i&lt;10;i++) &#123;</div><div class="line">  for(j=0;j&lt;=10;j++) &#123;</div><div class="line">    break outer;</div><div class="line">  &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<blockquote>
<p>此时会直接跳出外层循环 (有点类似与C的goto语句)</p>
</blockquote>
<p><strong>注意面试题陷阱</strong>  —–<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">int b = 10;</div><div class="line">https://Nankis.github.io</div><div class="line">System.out.println(b);</div></pre></td></tr></table></figure></p>
<p>此语句在代码中不会报错<br>因为  <strong>https:</strong>   是一个标号  而 <strong>//Nankis.github.io</strong> 是一个注释.</p>
<p>当然也不是网页所以不会跳转</p>
<h3 id="Java中的方法-数组"><a href="#Java中的方法-数组" class="headerlink" title="Java中的方法,数组"></a>Java中的方法,数组</h3><h4 id="Java中的函数–方法"><a href="#Java中的函数–方法" class="headerlink" title="Java中的函数–方法"></a>Java中的函数–方法</h4><p><img src="http://ossdpnhoy.bkt.clouddn.com/%E6%96%B9%E6%B3%95.jpg" alt="方法"></p>
<p>注意:</p>
<ul>
<li><p>返回值是void的函数只能   单独调用(输出调用,赋值调用会报错).</p>
</li>
<li><p>方法重载:</p>
<ul>
<li><font color="red">方法名相同,参数列表不同,与返回值类型无关(但返回值不同时,接收的数据类型也不同).</font><br><img src="http://ossdpnhoy.bkt.clouddn.com/%E6%96%B9%E6%B3%952.jpg" alt="访法"></li>
</ul>
</li>
</ul>
<h4 id="Java中的数组"><a href="#Java中的数组" class="headerlink" title="Java中的数组"></a>Java中的数组</h4><p><img src="http://ossdpnhoy.bkt.clouddn.com/%E6%95%B0%E7%BB%84.jpg" alt="数组"></p>
<p><strong>数组系统默认初始化数据类型:</strong></p>
<ul>
<li><p>整数类型:byte,short,int,long默认初始化都是0</p>
</li>
<li><p>浮点类型:float,double.默认初始化是0.0</p>
</li>
<li><p>boolean:布尔默认初始化false</p>
</li>
<li><p>字符类型:char默认初始化值’\u0000’</p>
<blockquote>
<p>char在内存中占的两个字节,是16个二进制位</p>
<p>\u0000,每一个0其实代表的是16进制的0,那么四个0就是代表16个二进制位</p>
</blockquote>
</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">int[] arr;</div><div class="line">System.out.println(arr);    // 此时会输出  [I@19bb25a</div></pre></td></tr></table></figure>
<blockquote>
<p>[代表数组,几个[就代表几维数组</p>
<p>I代表int类型</p>
<p>@是固定格式</p>
<p>19bb25a代表的是十六进制的地址值</p>
</blockquote>
<h4 id="数组中的内存"><a href="#数组中的内存" class="headerlink" title="数组中的内存"></a>数组中的内存</h4><p><img src="http://ossdpnhoy.bkt.clouddn.com/%E5%86%85%E5%AD%98.jpg" alt="内存"></p>
<p><img src="http://ossdpnhoy.bkt.clouddn.com/%E5%86%85%E5%AD%982.jpg" alt="内存2"></p>
<p>在栈中存储 int[] arr</p>
<p>而在堆中new int[3]</p>
<p>在调用时,   把堆中的首地址传给栈中的int[] arr</p>
<p>栈先进后出的理解可以想象成弹夹装子弹,先装的最后打出来. 主函数(主方法亦是如此)</p>
<p>值得注意的是:即便给堆中的数组赋值了,它仍旧先默认初始化0,再显示初始化赋值.</p>
<p>比如  arr[0] = 1;   那么它仍旧先在堆中对 arr[]数组的  arr[0],arr[1],arr[2] 均初始化为0</p>
<p>然后再用你赋值的数,覆盖arr[0]中的0.</p>
<h5 id="数组的赋值是内存地址的直接赋值"><a href="#数组的赋值是内存地址的直接赋值" class="headerlink" title="数组的赋值是内存地址的直接赋值"></a><font color="red">数组的赋值是内存地址的直接赋值</font></h5><h4 id="数组初始化"><a href="#数组初始化" class="headerlink" title="数组初始化"></a>数组初始化</h4><p>  <img src="http://ossdpnhoy.bkt.clouddn.com/%E6%95%B0%E7%BB%84%E5%88%9D%E5%A7%8B%E5%8C%961.jpg" alt="格 式1"></p>
<p>静态应该为: int[ ] arr = new [ ] {11,22,33,44,55}</p>
<p>此时是静态初始化,因此不再允许在后面的中括号加上5这样的动态初始化.</p>
<p>开发中,我们常用静态初始化的 <strong>简写形式.</strong></p>
<p><strong>数组常见的两种错误:</strong></p>
<p><strong>a.ArrayIndexOutOfBoundsException</strong>: 数组索引越界异常(角标异常)</p>
<p><strong>b.NullPointerException</strong>:空指针异常</p>
<p>数组长度函数调用:</p>
<p><strong>数组名.length</strong></p>
<p>数组交换排序:</p>
<p>首和尾交换,   a[0]  ~ a[最后一个]    ,a[1] ~ a[倒数第二个]  …….</p>
<p> 算法:   <strong>a[i] ~ a[数组名.length-1-i]</strong></p>
<p> 其中 <strong>‘数组名.length-1’</strong> 是数组的 <strong>最大</strong> 索引;</p>
<h4 id="二维数组的定义"><a href="#二维数组的定义" class="headerlink" title="二维数组的定义"></a>二维数组的定义</h4><ul>
<li><h5 id="定义格式1"><a href="#定义格式1" class="headerlink" title="定义格式1:"></a>定义格式1:</h5><p><img src="http://ossdpnhoy.bkt.clouddn.com/%E4%BA%8C%E7%BB%B4%E6%95%B0%E7%BB%84%E5%AE%9A%E4%B9%891.jpg" alt="二维数组定义1"><br><img src="http://ossdpnhoy.bkt.clouddn.com/%E4%BA%8C%E7%BB%B4%E5%AE%9A%E4%B9%8911.jpg" alt="定义11"></p>
<p>二维数组创建时,其二维数组默认值是null,而与一维数组创建不同,它不是0;如下图</p>
<p><img src="http://ossdpnhoy.bkt.clouddn.com/%E4%BA%8C%E7%BB%B4%E6%95%B0%E7%BB%84%E5%86%85%E5%AD%98.jpg" alt="内存1111"></p>
</li>
<li><h5 id="定义格式2"><a href="#定义格式2" class="headerlink" title="定义格式2"></a>定义格式2</h5><p><img src="http://ossdpnhoy.bkt.clouddn.com/%E4%BA%8C%E7%BB%B4%E6%95%B0%E7%BB%84%E5%AE%9A%E4%B9%89%E6%A0%BC%E5%BC%8F2.jpg" alt="定义2222"><br> PS第一句解释: <strong>三个一维数组均没有被赋值.</strong></p>
</li>
<li><h5 id="定义格式3及其内存图"><a href="#定义格式3及其内存图" class="headerlink" title="定义格式3及其内存图"></a>定义格式3及其内存图</h5><p><img src="http://ossdpnhoy.bkt.clouddn.com/%E4%BA%8C%E7%BB%B4%E6%95%B0%E7%BB%84%E6%A0%BC%E5%BC%8F3%E5%86%85%E5%AD%98.jpg" alt="33333"></p>
</li>
</ul>
<h4 id="二维数组中的遍历"><a href="#二维数组中的遍历" class="headerlink" title="二维数组中的遍历:"></a>二维数组中的遍历:</h4><p><img src="http://ossdpnhoy.bkt.clouddn.com/%E4%BA%8C%E7%BB%B4%E6%95%B0%E7%BB%84%E9%81%8D%E5%8E%86.jpg" alt="遍历2"></p>
<h3 id="Java中的参数传递"><a href="#Java中的参数传递" class="headerlink" title="Java中的参数传递"></a>Java中的参数传递</h3><ul>
<li><p>基本数据类型的值传递不改变值,因为调用后就会弹栈,局部变量随之消失.</p>
</li>
<li><p>而引用数据类型的值传递,改变原值,因为即便方法弹栈,其堆内存数组对象还在,可以通过地址继续访问</p>
<p><strong>(面试题)那么,java中到底是传值还是传址呢?</strong></p>
</li>
<li><p>1.既是传值又是传址:基本数据类型传值,引用数据类型传址. <strong>(答案不确切)</strong></p>
</li>
<li><p>2.<font color="red"> <strong>Java中只有传值:</strong> 因为地址值也是值 </font> (出去面试都说这种答案,因为此答案是java之父高斯林的支持者)</p>
</li>
</ul>
]]></content>
      
        <categories>
            
            <category> Java </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[轻描淡写]]></title>
      <url>/2017/07/08/%E8%BD%BB%E6%8F%8F%E6%B7%A1%E5%86%99/</url>
      <content type="html"><![CDATA[<p>忘了很久的名字，又出现了呢。</p>
<p>可真叫人伤心。</p>
]]></content>
      
        <categories>
            
            <category> 自言自语 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[各种摘录]]></title>
      <url>/2017/07/08/%E5%90%84%E7%A7%8D%E6%91%98%E5%BD%95/</url>
      <content type="html"><![CDATA[<hr>
<p>最美的感情，永远出现在最不懂爱的年纪。</p>
<hr>
<p>你好像瘦了，头发也变长，背影陌生到让我觉得，见你是上个世纪的事，然后你开口叫我名字，我就想笑，好像自己刚刚放学，只在校门口等了你五分钟而已。</p>
<pre><code>——一生有你，水木年华。
</code></pre><hr>
<p>惟愿终生等候，换你刹那凝眸</p>
<hr>
<p> 其实我有时候会想，什么样的男的会要<em>*</em>这样的女子。对着镜子照了照，马上找到了满意的答案。</p>
<hr>
<p>年轻时不多经历一点 老了拿什么下酒？</p>
<p>—-拿故事来下酒只怕是比酒还苦吧。</p>
<hr>
<p>妈妈说：“如果你越来越冷漠，你以为你成长了，但其实没有。长大应该是变得温柔，对全世界都温柔。</p>
<pre><code>——Where Is The Love（Soule Rework) &amp;&amp; 三季人
</code></pre><hr>
<p>人的一生，要死去三次。 第一次，当你的心跳停止，呼吸消逝，你在生物学上被宣告了死亡； 第二次，当你下葬，人们穿着黑衣出席你的葬礼，他们宣告，你在这个社会上不复存在，你悄然离去； 第三次死亡，是这个世界上最后一个记得你的人，把你忘记，于是，你就真正地死去。整个宇宙都将不再和你有关。</p>
<pre><code>—— Medicine (Sound Remedy Remix)
</code></pre><hr>
<p>我一边踉跄前行，一边重振旗鼓。 ——太宰治 《阴火》</p>
<p>我知道有人是爱我的，但我好像缺乏爱人的能力。 ——太宰治 《人间失格》</p>
<hr>
]]></content>
      
        <categories>
            
            <category> 爱我所爱 </category>
            
        </categories>
        
        
    </entry>
    
  
  
    
    <entry>
      <title><![CDATA[关于科学上网及自主搭建梯子]]></title>
      <url>/%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91%E6%90%AD%E6%A2%AF%E5%AD%90%E4%B8%8B.html</url>
      <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言:"></a>前言:</h3><p>  假期花了点时间折腾了下,成功用VPS搭建了SSR(<a href="http://www.nanki.vip/" target="_blank" rel="external"><font color="gren">成功实例</font></a>).一开始没有找到很好的教</p>
<p>  程,自己来来回来折腾,</p>
<p>  重装了很多次服务器.后来找到了一键脚本之类的.还有魔改版等…此教程(其实没啥技术含量,</p>
<p>  或者都不算教程,其中大多都是搬照别人的)仅提供参考.</p>
<p>这个教程直接利用了别人写好的脚本和网站,所以只要安装正确,</p>
<p>配置正确的话就没问题的,这样会为第一次动手做这个的人少走很多弯路.</p>
<h3 id="为什么需要科学上网"><a href="#为什么需要科学上网" class="headerlink" title="为什么需要科学上网?"></a>为什么需要科学上网?</h3><ul>
<li>great firewall, 中国特有的。就是国家对网络的封锁。想要看看外面的世界，就得翻墙。既然想学点东西，就不能被网络束缚住。国内的网络环境，并不利于我们成长。..作为一个程序员,翻墙是必修课之一.</li>
<li><p>这里有个人写的一篇 <a href="http://stormzhang.com/2016/08/12/you-must-use-google/" target="_blank" rel="external"><font color="red">百度黑</font></a>参考….</p>
<h3 id="VPS"><a href="#VPS" class="headerlink" title="VPS"></a>VPS</h3><h4 id="VPS地点"><a href="#VPS地点" class="headerlink" title="VPS地点"></a>VPS地点</h4></li>
<li>美国的VPS联通/电信访问延迟基本相当。<br> 一般选择靠近美国西海岸节点旧金山、洛杉矶、纽约等地点。<br>电信限速很厉害，所以一般电信网需要开混淆配合FinaSppeed等加速。<br>新加坡节点，在靠近南方地区，可以ping在100以内稳定！youtube 4k不卡 但在偏北一些地区ping不稳定。</li>
</ul>
<ul>
<li>香港VPS，这个比较特殊，香港的VPS ping值可以低到20几，但是香港本身的国际出口就小，VPS价格也偏高，另外香港毕竟也在政府的直接管辖内，隐私方面风险比其他地区节点要大一些。建议土豪级别的游戏玩家使用。</li>
</ul>
<h4 id="VPS提供商"><a href="#VPS提供商" class="headerlink" title="VPS提供商"></a>VPS提供商</h4><p>目前市面上各种VPS供应商很多..在这里我不说太多..可自行查询,这里我选择的是Vultr的VPS.因为vultr免费快照很方便.,5$/月的费用也不高.</p>
<p><a href="https://www.vultr.com/?ref=7189114" target="_blank" rel="external">Vultr注册链接</a></p>
<blockquote>
<p>(题外话)通过这个推荐链接注册可以免费获得10美元,同时我也能获得一些奖励</p>
</blockquote>
<p>注意,购买</p>
<h4 id="服务器选择"><a href="#服务器选择" class="headerlink" title="服务器选择"></a>服务器选择</h4><ul>
<li><p>选择东京或者美国西海岸的服务器,速度相对比较快.<br><img src="http://ossdpnhoy.bkt.clouddn.com/VPSTVPS%E9%80%89%E6%8B%A91.png" alt="vps1"></p>
<h4 id="操作系统选择"><a href="#操作系统选择" class="headerlink" title="操作系统选择"></a>操作系统选择</h4><p><img src="http://ossdpnhoy.bkt.clouddn.com/VPSTVPS%E9%80%89%E6%8B%A92.png" alt="VPS2"></p>
<ul>
<li>注意,这里我选择CentOS6, 因为CentOS7去掉了iptables,而加了防火墙.处理起来会相对麻烦些.详情后面会讲到</li>
</ul>
</li>
</ul>
<h4 id="硬件选择"><a href="#硬件选择" class="headerlink" title="硬件选择"></a>硬件选择</h4><p><img src="http://ossdpnhoy.bkt.clouddn.com/VPSTVPS%E9%80%89%E6%8B%A93.png" alt="VPS3"></p>
<ul>
<li>此处打上勾,教育网用户/能分到IPV6地址的用户比较好用</li>
</ul>
<h4 id="关于购买"><a href="#关于购买" class="headerlink" title="关于购买"></a>关于购买</h4><ul>
<li>Vultr购买方式有<ul>
<li>paypal</li>
<li>visa信用卡<blockquote>
<p>这是我知道的方式…可能还有其他方式没试过</p>
</blockquote>
</li>
</ul>
</li>
</ul>
<p>这里我推荐使用paypal支付,先去paypal注册一个帐号,然后绑定一张银行卡即可.</p>
<p> <a href="https://www.paypal.com/c2/home" target="_blank" rel="external"><font color="red">Paypal注册地址</font></a></p>
<p><strong>注意:</strong> <font color="red">购买Vultr的VPS时,请别挂代理,否则可能会因为疑是欺诈而不能成功支付</font></p>
<h3 id="开始部署"><a href="#开始部署" class="headerlink" title="开始部署"></a>开始部署</h3><ul>
<li><p>现在你已经成功购买了一个5$/月的CentoS6 VPS.<br>  <img src="http://ossdpnhoy.bkt.clouddn.com/VPSTVPS4.png" alt="VPS4"></p>
</li>
<li><p>点击图标或服务器名字进入详情</p>
</li>
</ul>
<p><img src="http://ossdpnhoy.bkt.clouddn.com/VPSTvps5.png" alt="VPS5"></p>
<p>以上是VPS的信息<br>待会儿需要填写.地址和密码都可以直接复制</p>
<h4 id="下载SSH工具"><a href="#下载SSH工具" class="headerlink" title="下载SSH工具"></a>下载SSH工具</h4><p>这里我推荐用 <strong>Xshell</strong> ,下载方式:百度第一个</p>
<ul>
<li>安装完毕后打开应该是这样子的.<br>*<br><img src="http://ossdpnhoy.bkt.clouddn.com/VPSTVPS6.jpg" alt="VPS6"></li>
</ul>
<p>按照图示新建,会出现如图对话框,把刚才的ip地址复制到主机处.<br>可以在名称那里备注下:Vultr</p>
<ul>
<li><img src="http://ossdpnhoy.bkt.clouddn.com/VPSTVPS7.png" alt="VPS7"></li>
</ul>
<p>填写完毕后点击确定,会弹出一个对话框,只要点连接即,接着,会提示保存密</p>
<p>码之类的.选择接受并保存(貌似是中间的选项)</p>
<p>这时候只要出现左上角的有个绿点即表示连接服务器成功.</p>
<h4 id="关于安装"><a href="#关于安装" class="headerlink" title="关于安装"></a>关于安装</h4><ul>
<li><p>目前有几种安装方式,这里我写两种,第一种是最简单的一键安装脚本,安装脚本是来源于 <strong>“逗逼根据地”</strong>(末尾会附上链接)  这是单用户版,非商用</p>
</li>
<li><p>第二种是  宝塔版+前端魔改版V3的   可商用</p>
</li>
</ul>
<h4 id="一键安装脚本教程"><a href="#一键安装脚本教程" class="headerlink" title="一键安装脚本教程"></a>一键安装脚本教程</h4><p><strong>脚本特点:</strong></p>
<ul>
<li><p>支持 限制 用户速度</p>
</li>
<li><p>支持 限制 用户设备数</p>
</li>
<li><p>支持 限制 用户总流量</p>
</li>
<li><p>支持 定时 流量清零</p>
</li>
<li><p>支持 显示 当前连接IP</p>
</li>
<li><p>支持 显示 SS/SSR连接+二维码</p>
</li>
<li><p>支持 一键安装 BBR</p>
</li>
<li><p>支持 一键安装 锐速</p>
</li>
<li><p>支持 一键安装 LotServer</p>
</li>
<li><p>支持 一键封禁 垃圾邮件(SMAP)/BT/P</p>
</li>
</ul>
<p>简单的来说，如果你什么都不懂，那么你直接一路回车就可以了！</p>
<p>本脚本需要Linux root账户权限才能正常安装运行，所以如果不是 root账</p>
<p>号，请先切换为root，如果是 root账号，那么请跳过！</p>
<h5 id="安装步骤"><a href="#安装步骤" class="headerlink" title="安装步骤"></a>安装步骤</h5><figcaption>su</code></p></figcaption><pre class="line-numbers language-sudo"><code class="language-sudo"><p>输入上面代码回车后会提示你输入当前用户的密码，输入并回车后，没有报错就继续下面的步骤安装ShadowsocksR。</p>
<p><code>wget -N --no-check-certificate https://raw.githubusercontent.com/ToyoDAdoubi/doubi/master/ssrmu.sh && chmod +x ssrmu.sh && bash ssrmu.sh</code></p>
<p>下载运行后会提示你输入数字来选择要做什么。</p>
<p>输入 1 ，就会开始安装ShadowsocksR服务端，并且会提示你输入Shadowsocks的 端口/密码/加密方式/ 协议/混淆（混淆和协议是通过输入数字选择的） 等参数来添加第一个用户。</p>
<blockquote>
<p>注意:用户名不支持中文,如果输入中文会一直保存下去!</p>
</blockquote>
<p>因为该脚本是纯小白式的安装方法,所以也没啥可说的.最后安装成功后会显示如图效果:</p>
<p><img src="http://ossdpnhoy.bkt.clouddn.com/VPSTVPS8.png" alt="VPS8"></p>
<p>如图成功后,可下载小飞机测试了…若是还有问题则看最后附上的原教程.</p>
<h3 id="宝塔-魔改版V3"><a href="#宝塔-魔改版V3" class="headerlink" title="宝塔+魔改版V3"></a>宝塔+魔改版V3</h3><p>在搭建这个之前,如果你需要用来商用,则需要自己去购买一个域名,</p>
<p>当然也有免费域名,关于免费域名获取自行解决.  不过我自己用的</p>
<p>是godday的域名貌似40RMB一年…</p>
<h5 id="安装宝塔"><a href="#安装宝塔" class="headerlink" title="安装宝塔"></a>安装宝塔</h5><p>关于宝塔面板: 宝塔面板是Linux可直接操作面板,有些操作可以省去再用命令行操作.对新手十分友好.详情百度</p>
<ul>
<li>安装过程大概需要5分钟左右</li>
</ul>
<p><code>yum install -y wget && wget -O install.sh http://download.bt.cn/install/install.sh && sh install.sh<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<blockquote>
<p>这里有点需要提下:SSR的python需要需要2.7的而CentoS6自带的是2.6的所以需要升级,而安装宝塔自带将python升级到2.7.所以免去了手动升级python的步骤</p>
</blockquote>
<h5 id="宝塔安装LMNP"><a href="#宝塔安装LMNP" class="headerlink" title="宝塔安装LMNP"></a>宝塔安装LMNP</h5><p>宝塔安装完毕后会显示出登录的信息</p>
<p>默认应该是   VPS的IP地址:8888<br>假设我的IP地址为115.159.56.153 那么登录端口为</p>
<p><strong>115.159.56.153:8888</strong>  这种信息会在安装完毕后提示</p>
<p>根据安装完毕后得出的信息,复制到地址栏,打开后会有如下窗口:<br><img src="http://ossdpnhoy.bkt.clouddn.com/V1.png" alt="V1"></p>
<p>这里是我自己已经改过的信息.</p>
<p>登录成功后,请按如图所示安装需要的软件:</p>
<p><img src="http://ossdpnhoy.bkt.clouddn.com/V2.png" alt="V2"></p>
<p>除上图外,还需要再多安装一个 PHP7.0</p>
<p>安装完以上软件大概需要20分钟左右..</p>
<h5 id="配置及搭建站点"><a href="#配置及搭建站点" class="headerlink" title="配置及搭建站点"></a>配置及搭建站点</h5><p>现在开始需要刚才提到的域名了.如果你购买了域名后还需要进行DNS解析,大概需要20分钟左右.具体方法自行搜索.</p>
<ul>
<li>添加站点<br><img src="http://ossdpnhoy.bkt.clouddn.com/VPSTV3.png" alt="V3"></li>
</ul>
<p>这里你在解析的时候如果需要一个前端页面,那么需要去开一个二级页面.</p>
<ul>
<li>添加伪静态</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">location / &#123;</div><div class="line">           try_files $uri $uri/ /index.php$is_args$args;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p><img src="http://ossdpnhoy.bkt.clouddn.com/VPSTV4.png" alt="V4"></p>
<h4 id="搭建魔改V3站点"><a href="#搭建魔改V3站点" class="headerlink" title="搭建魔改V3站点"></a>搭建魔改V3站点</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">cd /www/wwwroot/www.nanki.vip</div><div class="line">git clone https://git.coding.net/mmmwhy/mod.git tmp &amp;&amp; mv tmp/.git . &amp;&amp; rm -rf tmp &amp;&amp; git reset --hard</div><div class="line">chown -R root:root *</div><div class="line">chmod -R 755 *</div><div class="line">chown -R www:www storage</div><div class="line">php composer.phar install         #必须安装，重要</div><div class="line">chattr -i .user.ini</div><div class="line">mv .user.ini ./public</div><div class="line">cd ./public</div><div class="line">chattr +i .user.ini</div></pre></td></tr></table></figure>
<p><strong>注意:</strong> 记得将第一行换成自己的域名.</p>
<ul>
<li>完成后直接在宝塔控制面板中重启页面服务器nginx</li>
</ul>
<h4 id="下载modV3"><a href="#下载modV3" class="headerlink" title="下载modV3"></a>下载modV3</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git clone https://git.coding.net/mmmwhy/mod.git tmp &amp;&amp; mv tmp/.git . &amp;&amp; rm -rf tmp &amp;&amp; git reset --hard</div></pre></td></tr></table></figure>
<h4 id="解压安装设置定时任务"><a href="#解压安装设置定时任务" class="headerlink" title="解压安装设置定时任务"></a>解压安装设置定时任务</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">yum -y install vixie-cron crontabs</div><div class="line">rm -rf /var/spool/cron/root</div><div class="line">echo &apos;SHELL=/bin/bash&apos; &gt;&gt; /var/spool/cron/root</div><div class="line">echo &apos;PATH=/sbin:/bin:/usr/sbin:/usr/bin&apos; &gt;&gt; /var/spool/cron/root</div><div class="line">echo &apos;*/20 * * * * /usr/sbin/ntpdate pool.ntp.org &gt; /dev/null 2&gt;&amp;1&apos; &gt;&gt; /var/spool/cron/root</div><div class="line">echo &apos;30 22 * * * php /www/wwwroot/www.nanki.vip/xcat sendDiaryMail&apos; &gt;&gt; /var/spool/cron/root</div><div class="line">echo &apos;0 0 * * * php /www/wwwroot/www.nanki.vip/xcat dailyjob&apos; &gt;&gt; /var/spool/cron/root</div><div class="line">echo &apos;*/1 * * * * php /www/wwwroot/www.nanki.vip/xcat checkjob&apos; &gt;&gt; /var/spool/cron/root</div><div class="line">/sbin/service crond restart</div></pre></td></tr></table></figure>
<p><strong>再次提醒:</strong>  记得将www.nanki.vip 换成自己的域名</p>
<h5 id="导入SSPanel文件入数据库"><a href="#导入SSPanel文件入数据库" class="headerlink" title="导入SSPanel文件入数据库"></a>导入SSPanel文件入数据库</h5><p>下载<a href="http://pan.baidu.com/s/1jI69GgA" target="_blank" rel="external"> <font color="red">sspanel文件</font></a><br>暂时存好,马上要用到</p>
<blockquote>
<p>密码:163e<br>原谅我只有网盘….</p>
</blockquote>
<ul>
<li>下载完后导入数据库里<br><img src="http://ossdpnhoy.bkt.clouddn.com/V8.png" alt="V8"></li>
</ul>
<p>之后,进入上边的那个phpmyadmin,新建sspanel数据库</p>
<p><img src="http://ossdpnhoy.bkt.clouddn.com/V6.png" alt="V6"></p>
<h5 id="配置config"><a href="#配置config" class="headerlink" title="配置config"></a>配置config</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">vi/wwwroot/www.nanki.vip/confing/.config.php</div></pre></td></tr></table></figure>
<p><img src="http://ossdpnhoy.bkt.clouddn.com/vv1.png" alt="vv1"></p>
<blockquote>
<p>这时候页面搭好了默认的帐号是:ss@91vps.club 默认密码:91vps</p>
</blockquote>
<h5 id="修改管理员"><a href="#修改管理员" class="headerlink" title="修改管理员"></a>修改管理员</h5><p>在<br><code>cd  /www/wwwroot/www.nanki.vip/</code><br> 配置</p>
<p>添加管理员<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">php xcat createAdmin</div></pre></td></tr></table></figure></p>
<p>同时,还可以通过数据库后台修改默认管理员帐号</p>
<p>下载客户端<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">php -n xat initdowonload</div></pre></td></tr></table></figure></p>
<p>到此,如果前面没错魔改站点已经搭建完毕,接下来就只要安装SSR即可</p>
<h3 id="SSR安装配置"><a href="#SSR安装配置" class="headerlink" title="SSR安装配置"></a>SSR安装配置</h3><h4 id="基本库安装"><a href="#基本库安装" class="headerlink" title="基本库安装"></a>基本库安装</h4><p>centos安装这个:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">yum update</div><div class="line">yum install git -y</div></pre></td></tr></table></figure></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git clone  https://github.com/Nankis/shadowsocksr-1.git</div></pre></td></tr></table></figure>
<p>执行完毕后此目录会新建一个shadowsocksr目录</p>
<h4 id="安装依赖（cymysql）"><a href="#安装依赖（cymysql）" class="headerlink" title="安装依赖（cymysql）"></a>安装依赖（cymysql）</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">cd shadowsocksr</div><div class="line"># 进入ShadowsocksR根目录</div><div class="line">bash setup_cymysql.sh</div><div class="line"># 安装Cymysql 依赖</div><div class="line">bash initcfg.sh</div><div class="line"># 初始化ShadowsocksR服务端</div></pre></td></tr></table></figure>
<h4 id="服务端配置"><a href="#服务端配置" class="headerlink" title="服务端配置"></a>服务端配置</h4><p>shadowsocksr 根目录内，打开文件vi usermysql.json：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">&quot;host&quot;: &quot;127.0.0.1&quot;, //前端mysql域名/IP</div><div class="line">&quot;port&quot;: 3306, //mysql端口</div><div class="line">&quot;user&quot;: &quot;ss&quot;, //mysql用户名</div><div class="line">&quot;password&quot;: &quot;pass&quot;, //mysql密码</div><div class="line">&quot;db&quot;: &quot;shadowsocks&quot;, //数据库名</div></pre></td></tr></table></figure>
<h4 id="配置config-json文件"><a href="#配置config-json文件" class="headerlink" title="配置config.json文件"></a>配置config.json文件</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">vi userapiconfig.py</div></pre></td></tr></table></figure>
<p>找到这么一行:<br><strong>API_INTERFACE = ‘’sspanelv2’’</strong></p>
<p>把 <strong>sspanelv2</strong> 修改成 <strong>sspanelv3</strong></p>
<h4 id="修改数据库配置"><a href="#修改数据库配置" class="headerlink" title="修改数据库配置"></a>修改数据库配置</h4><p><strong>注意:</strong> 到此步骤后为了防止奇怪的错误,需要先去增加一个节点<br>登录你的域名网站,用管理员方式登录,进入最左下角的管理员面板<br>在节点列表的右下角有个加号,那里添加一个节点<br>如图所示:</p>
<p><img src="http://ossdpnhoy.bkt.clouddn.com/VV3.png" alt="VV3"></p>
<p>记住日本节点的ID: 3</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">vi usermysql.json</div></pre></td></tr></table></figure>
<p><img src="http://ossdpnhoy.bkt.clouddn.com/VV2.png" alt="VV2"></p>
<p>将图中的 <strong>‘’node_id’’:1,</strong>  的1 改成3;(和上图日本ID相同)</p>
<h4 id="调试"><a href="#调试" class="headerlink" title="调试"></a>调试</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">python server.py</div></pre></td></tr></table></figure>
<blockquote>
<p>这句运行代码主要用于调试，关闭ssh后ss后端自动关闭，所以正式使用请使用下面的脚本运行！如果需要停止请按Ctrl+C键终止程序。</p>
<p>这时可查看有运行情况，检查有没有错误。如果服务端没有错误，而连接不上，需要检查iptables或firewall(centos7)的防火墙配置</p>
</blockquote>
<h5 id="关于iptables的配置"><a href="#关于iptables的配置" class="headerlink" title="关于iptables的配置"></a>关于iptables的配置</h5><p>在配置iptables之前,先试着把iptables暂时关闭后试试看是否没问题了..如果运行没问题了.那就开始配置.配置方式参考  <a href="https://nankis.github.io/2017/07/08/CentOS67iptables%E9%85%8D%E7%BD%AE/" target="_blank" rel="external"><font color="red">我是传送门</font></a></p>
<h4 id="通过脚本运行"><a href="#通过脚本运行" class="headerlink" title="通过脚本运行"></a>通过脚本运行</h4><p>脚本位于 shadowsocksr 根目录，如果你没有在这个目录，请先进入根目录cd shadowsocksr</p>
<p>请分清楚，根目录 shadowsocksr 和子目录 shadowsocksr/shadowsocks ！<br>赋予脚本执行权限（执行一次就好）<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">chmod +x *.sh</div></pre></td></tr></table></figure></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">./run.sh</div></pre></td></tr></table></figure>
<blockquote>
<p>后台运行 但不记录日志（ssh窗口关闭后也继续运行）</p>
</blockquote>
<h4 id="开机启动"><a href="#开机启动" class="headerlink" title="开机启动"></a>开机启动</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">chmod +x /etc/rc.d/rc.local</div><div class="line">vi /etc/rc.d/rc.local</div></pre></td></tr></table></figure>
<h4 id="加速优化"><a href="#加速优化" class="headerlink" title="加速优化"></a>加速优化</h4><p>CentOS6和CentOS7 一键更换内核，一键安装锐速[lotServer][serverSpeeder ]</p>
<p>支持KVM、VMWARE、Hyper-v、XEN 虚拟化技术的VPS</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">wget --no-check-certificate https://blog.asuhu.com/sh/ruisu.sh</div><div class="line">bash ruisu.sh</div></pre></td></tr></table></figure>
<blockquote>
<p>CentOS6和CentOS7 一键更换内核，完成后会重启</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">wget --no-check-certificate -O appex.sh</div><div class="line"> https://raw.githubusercontent.com/0oVicero0/serverSpeeder_Install/master/appex.sh &amp;&amp; chmod +x appex.sh &amp;&amp; bash appex.sh install</div></pre></td></tr></table></figure>
<blockquote>
<p>CentOS6和7 更换内核完成一键安装锐速[lotServer]</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">lsmod |grep appex</div></pre></td></tr></table></figure>
<blockquote>
<p>安装完成后检测是否启用</p>
</blockquote>
<p>到此为止,完整的安装宝塔面板+魔改MODV3+SSR就已完成.  中途有些简单步骤已省略.</p>
<h4 id="测速"><a href="#测速" class="headerlink" title="测速"></a>测速</h4><p>关于测速,可以去找谷歌网盘测试,一些人测速喜欢用YouTube的统计，而实际上是仅供装逼….<br>其实那个不是很准…</p>
<h4 id="参考来源"><a href="#参考来源" class="headerlink" title="参考来源:"></a><strong>参考来源:</strong></h4><ul>
<li><p><a href="https://doub.io/" target="_blank" rel="external"><font color="red"> 逗逼根据地</font></a></p>
</li>
<li><p><a href="https://91vps.club" target="_blank" rel="external"><font color="red"> 91VPS</font></a></p>
</li>
</ul>
<blockquote>
<p>第一个需要梯子才能看, 第二个可能是大佬自己关了..</p>
</blockquote>
<h3 id="关于SSR及其他补充了解"><a href="#关于SSR及其他补充了解" class="headerlink" title="关于SSR及其他补充了解"></a>关于SSR及其他补充了解</h3><h4 id="Shadowsocks作者是谁？是否还在更新？"><a href="#Shadowsocks作者是谁？是否还在更新？" class="headerlink" title="Shadowsocks作者是谁？是否还在更新？"></a>Shadowsocks作者是谁？是否还在更新？</h4><p>Shadowsocks是由若干人因为兴趣而制作的一个项目，主要开发者和领导者是 @clowwindy ，</p>
<p>但是在2015年下半年 被“相关部门”约谈喝茶，于是被迫删除Github的源码及相关文档。</p>
<p><img src="http://ossdpnhoy.bkt.clouddn.com/vvv1.png" alt="VVV3"></p>
<p>但Shadowsocks属于开源项目，所以删除前已经有人备份，同时由另一个志愿者跟进维护原版 Shadowsocks</p>
<p> 客户端，而其他基于Shadowsocks项目的第三方项目有：</p>
<p>ShadowsocksR、Shadowsocks-qt5、ShadowsocksCap等来维护更新Window/Linux客户端（其他系统的不一一举例了）。</p>
<p>还有ShadowsocksR是breakwa11发起的shadowsocks分支，在shadowsocks的基础上增加了一些数据混淆方式</p>
<p>称修复了部分安全问题并可以提高QoS优先级。后来贡献者Librehat也为shadowsocks补上了一些此类特性</p>
<p>甚至增加了类似Tor的可插拔传输层功能。</p>
<p>而在两个月前破娃似乎是遭到了威胁..在8000+人的TG群上宣布了解散群,以及放手SSR更新.</p>
<p><img src="http://ossdpnhoy.bkt.clouddn.com/powa.png" alt="pw"></p>
<h4 id="SSR的PAC是什么意思"><a href="#SSR的PAC是什么意思" class="headerlink" title="SSR的PAC是什么意思"></a>SSR的PAC是什么意思</h4><blockquote>
<p>代理自动配置（英语：Proxy auto-config，简称PAC）是一种网页浏览器技术，用于定义浏览器该如何自动选择适当的代理服务器来访问一个网址。<br>一个PAC文件包含一个JavaScript形式的函数“FindProxyForURL(url, host)”。这个函数返回一个包含一个或多个访问规则的字符串。用户代理根据这些规则适用一个特定的代理器或者直接访问。当一个代理服务器&gt;无法响应的时候，多个访问规则提供了其他的后备访问方法。浏览器在访问其他页面以前，首先访问这&gt;个PAC文件。PAC文件中的URL可能是手工配置的，也可能是是通过网页的网络代理自发现协议（WPAD）自动配置的。<br>———— 截取自维基百科</p>
</blockquote>
<p>PAC中文名叫做代理自动配置，PAC其实就是 HTTP/SOCKS等代理服务器 + 网址规则，只有在你浏览器访问 网址规则中包含的网站 时才会走PAC文件中包含指定的HTTP/SOCKS代理服务器。</p>
<p>因为Shadowsocks作者喝茶后，原本维护更新的PAC（GFWlist）文件也被删除，不过现在由ShadowsocksR作者接手维护了（Github项目），由网友不断的提交新的被墙的网址和IP。目前分为网址白名单、黑名单、黑白名单，同时也有ip的名单。所以有时候访问一些网站，可能被墙或者打开很慢.</p>
<h4 id="SSR中的代理规则是什么"><a href="#SSR中的代理规则是什么" class="headerlink" title="SSR中的代理规则是什么"></a>SSR中的代理规则是什么</h4><p>ShadowsocksR目前分两种规则方式，那就是 PAC规则（系统代理模式） 和 代理规则 。</p>
<p>PAC规则 是根据PAC文件中的黑白地址名单来判断那些网站走代理。也就是判断 流量是否进入客户端。</p>
<p>当你要访问的网站满足 PAC里的设置，那么浏览器就会向代理服务器也就是客户端发送网站请求数据，这时候我们才进入了ShadowsocksR客户端，接下来我们就进入了代理规则判断环节。</p>
<p>代理规则 是根据IP判断，按设定的规则来判断进入 客户端的流量是直连还是走代理。</p>
<h4 id="关于-安全卫士-杀毒软件-浏览器-等说明"><a href="#关于-安全卫士-杀毒软件-浏览器-等说明" class="headerlink" title="关于 安全卫士/杀毒软件/浏览器 等说明"></a>关于 安全卫士/杀毒软件/浏览器 等说明</h4><p>各种国产杀毒/安全卫士和360/百度浏览器等软件都不能使用！简单给你们解释一下为什么。</p>
<p>安全卫士和杀毒软件，常常会在你访问 有病毒/木马网站 或者 嘿嘿嘿的网站的时候，突然弹窗提醒你这个网站不安全什么的。</p>
<p>他为什么知道这个网站不安全？因为他在监视你的一举一动，这很容易。</p>
<p>然后明知道国内在正常途径是不可能访问Google等网站，结果你突然 访问了Google等被墙的网站，那 安全卫士/杀毒软件 又不是傻子，自然知道你在使用代理或者VPN等方式科学上网。</p>
<p>杀毒软件和安全卫士都会以保护电脑不被侵害的理由监控电脑的一举一动，一旦你使用了vpn，他就可以检测到你正在使用vpn，虽然他无法知道你的传输数据，但是只要知道你在使用vpn就够了，然后再查询下你的ip就可以后台上传信息了，或许很快你的vpn的ip就被封了！</p>
<p>浏览器同样也是，比如你访问了国内根本不可能通过正常途径访问的网站（Google、Youtube），这样子浏览器肯定就知道你用了代理或者vpn，然后就会查一下ip然后上传信息，同样就会被封。</p>
<p>还有一些浏览器都有的同步数据功能，鬼知道他会不会借着同步你的数据作掩护去上传你的某些隐私和科学上网证据，反正加密了。对外声称这是在同步数据，骗过了大部分人。而且就算你关闭，他或许也会换个其他的理由继续上传，反正只要是个浏览器总不能禁止上传流量吧。</p>
<p>很多人会说：“我用了360安全卫士和360浏览器也没见到我的vpn/ss被封啊？”这只能说是时候未到，我们不应该把自己的vpn/ss安全寄托到不靠谱的希望上！我们要未雨绸缪，在问题出现前清除隐患！</p>
<p>大数据时代，就是要尽一切可能的收集任何用户的资料信息。</p>
<blockquote>
<p>PS:Win10系统自带的防御功能就很强了,没必要再装某管家…某卫士了…</p>
</blockquote>
<h4 id="关于保护隐私"><a href="#关于保护隐私" class="headerlink" title="关于保护隐私"></a>关于保护隐私</h4><p>360浏览器、百度浏览器等国内浏览器官方内置的科学上网功能都不支持使用，这些代理很可能会被用于中间人攻击。如果该“中间人”与浏览器官方同一阵线，那么浏览器验证机制就会放行这种攻击。国内产浏览器也不推荐使用，有用户透露，360浏览器在安装的过程中就引发了win7系统报警，证明该程序有规避认证的行为。全球三大桌面浏览器在隐私保护方面的比较一般认为，Firefox最优，其次是Chrome/Chromium，再其次是IE。</p>
<p>发照片自爆是很多网友的喜好，但经常发表敏感政治言论的网友这方面就要小心些了，很容易因此被人肉搜索到。另，建议登陆海外网站的时候尽可能不使用和在大陆平台上同样的昵称和同样的本人照片头像，即便墙内身份暴露，只要否认墙外身份，“有关部门”就基本无法获取证据。</p>
<p>很多社交平台都有分享地理位置的功能，比如墙内的微信、微博和墙外的推特等，但不推荐使用，如果您用的是苹果产品，可以直接选择在设置中关闭定位服务的方法来保护行踪隐私。</p>
<p>有些网站希望用户输入求学就业经历，以便联系到同学同事互相添加。如果该应用是大陆开发的产品就不推荐使用这项功能。您肯定有其他方式联系到您觉得值得联系的同学和同事。</p>
<p>尽可能不使用公共场合免费的wifi，如果遭遇恶意搭建的wifi，很容易被盗取个人信息，其他安全性不明的wifi网络也要谨慎选择。</p>
<p>曾经有网友曝，小米手机和小米平板都会在用户使用加密数据或使用VPN科学上网時，窃取数据并发送到北京某服務器；360系列软件则会监控用戶的qq、skype等通讯窃取数据。对于后者已能基本确信，对于前者建议谨慎选择以防患于未然。</p>
<p>国内产的杀毒软件也不推荐使用，比如：360“监控”猥士、腾讯“收集”管家、百度猥士，本网曾有报道，奇虎 360 投资的一家微型公司“麦芽地”，其前身是个人网站“麦克孤独”，被曝是“WireLurker(MacHook)”木马制作者和传播者。</p>
<h3 id="一些有必要去了解的"><a href="#一些有必要去了解的" class="headerlink" title="一些有必要去了解的"></a>一些有必要去了解的</h3><p>关于科学上网这方面还有一些东西需要去了解,在这里我不再复制…自己去查吧</p>
<ul>
<li>CNNIC根证书的危险及清除方法（科学上网必读）</li>
<li>如何防范中国网络“大炮”</li>
<li>科学上网的注意事项及相关法律（必读）</li>
</ul>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Nanki]]></title>
      <url>/about.html</url>
      <content type="html"><![CDATA[<h2 id="关于我："><a href="#关于我：" class="headerlink" title="关于我："></a>关于我：</h2><p>此人很懒什么都没留下，但他依旧很帅。</p>
<p><strong>其实也没什么好说的</strong></p>
<blockquote>
<p>假装无fuck可说。</p>
</blockquote>
<h4 id="好吧："><a href="#好吧：" class="headerlink" title="好吧："></a>好吧：</h4><p>我很懒</p>
<p>喜欢宅着</p>
<p>喜欢动漫</p>
<p>嗯….最喜欢《RE：从零开始的异世界生活》</p>
<p>喜欢《东京喰种》</p>
<p>还有蕾姆酱~</p>
<blockquote>
<p>如果真爱有颜色，那一定是#66CCFF(蓝色)的。</p>
</blockquote>
<h4 id="游戏方面："><a href="#游戏方面：" class="headerlink" title="游戏方面："></a>游戏方面：</h4><p>兼容大多数游戏</p>
<p>以前喜欢玩LOL</p>
<blockquote>
<p>内测玩家，也是唯一一款不把它当作游戏的游戏，不过现在已经退出了。嗯，很怀念以前和老战友开黑的时光，喜欢若风，草莓，微笑时代的WE，也喜欢那时候有PDD和笑笑的IG。还有欧洲王者战队M5，世界第一冰鸟Froggen，无敌中单Alex.满满的回忆….</p>
</blockquote>
<p>现在不怎么玩游戏了</p>
<p>偶尔会和朋友开黑玩魔兽争霸3</p>
<p>联机玩各种防守图，RPG..仙之侠道系列。</p>
<p>最喜欢的单机是骑马与砍杀吧。</p>
<p>现在可是超期待骑砍2发售的。</p>
<blockquote>
<p>希望有生之年能等到。</p>
</blockquote>
<h4 id="音乐："><a href="#音乐：" class="headerlink" title="音乐："></a>音乐：</h4><p>对我来说</p>
<p>可以没有游戏和动漫</p>
<p>但如果没有音乐</p>
<p>那么这个世界也就没什么意义了吧。</p>
<p>其实我只是个初烧</p>
<p>设备方面:信仰系列———<strong>IE80</strong></p>
<p>前端待入。</p>
<blockquote>
<p>喜欢森海塞尔的，睡觉的时候喜欢听歌，睡坏了3条，其中有一条CX215的。说多了是泪…</p>
</blockquote>
<p><strong>网易云传送门:</strong>  <a href="http://music.163.com/#/user/home?id=72503434" target="_blank" rel="external"><font color="red">Nankis</font></a></p>
<blockquote>
<p>网易云重度患者，偶尔会在动态发骚话…</p>
</blockquote>
<h4 id="理想："><a href="#理想：" class="headerlink" title="理想："></a>理想：</h4><p>写没人看的小说</p>
<p>做没人玩的游戏</p>
<p>旅没有人陪的游</p>
<h4 id="补充："><a href="#补充：" class="headerlink" title="补充："></a>补充：</h4><p>对了，忘记告诉你们一个秘密</p>
<p>咖啡+网易云+代码=绝配</p>
<blockquote>
<p>以前迷信科学<br>现在相信玄学<br>(手动滑稽)</p>
</blockquote>
]]></content>
    </entry>
    
  
</search>
